{"version":3,"file":"material-examples.js","sources":["../packages/material-examples/material-module.js","../packages/material-examples/autocomplete-display/autocomplete-display-example.js","../packages/material-examples/autocomplete-filter/autocomplete-filter-example.js","../packages/material-examples/autocomplete-overview/autocomplete-overview-example.js","../packages/material-examples/autocomplete-simple/autocomplete-simple-example.js","../packages/material-examples/button-overview/button-overview-example.js","../packages/material-examples/button-toggle-exclusive/button-toggle-exclusive-example.js","../packages/material-examples/button-toggle-overview/button-toggle-overview-example.js","../packages/material-examples/button-types/button-types-example.js","../packages/material-examples/card-fancy/card-fancy-example.js","../packages/material-examples/card-overview/card-overview-example.js","../packages/material-examples/cdk-table-basic/cdk-table-basic-example.js","../packages/material-examples/checkbox-configurable/checkbox-configurable-example.js","../packages/material-examples/checkbox-overview/checkbox-overview-example.js","../packages/material-examples/chips-input/chips-input-example.js","../packages/material-examples/chips-overview/chips-overview-example.js","../packages/material-examples/chips-stacked/chips-stacked-example.js","../packages/material-examples/datepicker-api/datepicker-api-example.js","../packages/material-examples/datepicker-disabled/datepicker-disabled-example.js","../packages/material-examples/datepicker-events/datepicker-events-example.js","../packages/material-examples/datepicker-filter/datepicker-filter-example.js","../packages/material-examples/datepicker-formats/datepicker-formats-example.js","../packages/material-examples/datepicker-locale/datepicker-locale-example.js","../packages/material-examples/datepicker-min-max/datepicker-min-max-example.js","../packages/material-examples/datepicker-moment/datepicker-moment-example.js","../packages/material-examples/datepicker-overview/datepicker-overview-example.js","../packages/material-examples/datepicker-start-view/datepicker-start-view-example.js","../packages/material-examples/datepicker-touch/datepicker-touch-example.js","../packages/material-examples/datepicker-value/datepicker-value-example.js","../packages/material-examples/dialog-content/dialog-content-example.js","../packages/material-examples/dialog-data/dialog-data-example.js","../packages/material-examples/dialog-elements/dialog-elements-example.js","../packages/material-examples/dialog-overview/dialog-overview-example.js","../packages/material-examples/elevation-overview/elevation-overview-example.js","../packages/material-examples/expansion-overview/expansion-overview-example.js","../packages/material-examples/expansion-steps/expansion-steps-example.js","../packages/material-examples/form-field-custom-control/form-field-custom-control-example.js","../packages/material-examples/form-field-error/form-field-error-example.js","../packages/material-examples/form-field-hint/form-field-hint-example.js","../packages/material-examples/form-field-label/form-field-label-example.js","../packages/material-examples/form-field-overview/form-field-overview-example.js","../packages/material-examples/form-field-prefix-suffix/form-field-prefix-suffix-example.js","../packages/material-examples/form-field-theming/form-field-theming-example.js","../packages/material-examples/grid-list-dynamic/grid-list-dynamic-example.js","../packages/material-examples/grid-list-overview/grid-list-overview-example.js","../packages/material-examples/icon-overview/icon-overview-example.js","../packages/material-examples/icon-svg-example/icon-svg-example.js","../packages/material-examples/input-autosize-textarea/input-autosize-textarea-example.js","../packages/material-examples/input-clearable/input-clearable-example.js","../packages/material-examples/input-error-state-matcher/input-error-state-matcher-example.js","../packages/material-examples/input-errors/input-errors-example.js","../packages/material-examples/input-form/input-form-example.js","../packages/material-examples/input-hint/input-hint-example.js","../packages/material-examples/input-overview/input-overview-example.js","../packages/material-examples/input-prefix-suffix/input-prefix-suffix-example.js","../packages/material-examples/list-overview/list-overview-example.js","../packages/material-examples/list-sections/list-sections-example.js","../packages/material-examples/list-selection/list-selection-example.js","../packages/material-examples/menu-icons/menu-icons-example.js","../packages/material-examples/menu-overview/menu-overview-example.js","../packages/material-examples/nested-menu/nested-menu-example.js","../packages/material-examples/paginator-configurable/paginator-configurable-example.js","../packages/material-examples/paginator-overview/paginator-overview-example.js","../packages/material-examples/progress-bar-buffer/progress-bar-buffer-example.js","../packages/material-examples/progress-bar-configurable/progress-bar-configurable-example.js","../packages/material-examples/progress-bar-determinate/progress-bar-determinate-example.js","../packages/material-examples/progress-bar-indeterminate/progress-bar-indeterminate-example.js","../packages/material-examples/progress-bar-query/progress-bar-query-example.js","../packages/material-examples/progress-spinner-configurable/progress-spinner-configurable-example.js","../packages/material-examples/progress-spinner-overview/progress-spinner-overview-example.js","../packages/material-examples/radio-ng-model/radio-ng-model-example.js","../packages/material-examples/radio-overview/radio-overview-example.js","../packages/material-examples/select-custom-trigger/select-custom-trigger-example.js","../packages/material-examples/select-disabled/select-disabled-example.js","../packages/material-examples/select-error-state-matcher/select-error-state-matcher-example.js","../packages/material-examples/select-form/select-form-example.js","../packages/material-examples/select-hint-error/select-hint-error-example.js","../packages/material-examples/select-multiple/select-multiple-example.js","../packages/material-examples/select-no-ripple/select-no-ripple-example.js","../packages/material-examples/select-optgroup/select-optgroup-example.js","../packages/material-examples/select-overview/select-overview-example.js","../packages/material-examples/select-panel-class/select-panel-class-example.js","../packages/material-examples/select-reset/select-reset-example.js","../packages/material-examples/select-value-binding/select-value-binding-example.js","../packages/material-examples/sidenav-autosize/sidenav-autosize-example.js","../packages/material-examples/sidenav-disable-close/sidenav-disable-close-example.js","../packages/material-examples/sidenav-drawer-overview/sidenav-drawer-overview-example.js","../packages/material-examples/sidenav-fixed/sidenav-fixed-example.js","../packages/material-examples/sidenav-mode/sidenav-mode-example.js","../packages/material-examples/sidenav-open-close/sidenav-open-close-example.js","../packages/material-examples/sidenav-overview/sidenav-overview-example.js","../packages/material-examples/sidenav-position/sidenav-position-example.js","../packages/material-examples/sidenav-responsive/sidenav-responsive-example.js","../packages/material-examples/slide-toggle-configurable/slide-toggle-configurable-example.js","../packages/material-examples/slide-toggle-forms/slide-toggle-forms-example.js","../packages/material-examples/slide-toggle-overview/slide-toggle-overview-example.js","../packages/material-examples/slider-configurable/slider-configurable-example.js","../packages/material-examples/slider-overview/slider-overview-example.js","../packages/material-examples/snack-bar-component/snack-bar-component-example.js","../packages/material-examples/snack-bar-overview/snack-bar-overview-example.js","../packages/material-examples/sort-overview/sort-overview-example.js","../packages/material-examples/stepper-overview/stepper-overview-example.js","../packages/material-examples/table-basic/table-basic-example.js","../packages/material-examples/table-filtering/table-filtering-example.js","../packages/material-examples/table-http/table-http-example.js","../packages/material-examples/table-overview/table-overview-example.js","../packages/material-examples/table-pagination/table-pagination-example.js","../packages/material-examples/table-selection/table-selection-example.js","../packages/material-examples/table-sorting/table-sorting-example.js","../packages/material-examples/tabs-overview/tabs-overview-example.js","../packages/material-examples/tabs-template-label/tabs-template-label-example.js","../packages/material-examples/toolbar-multirow/toolbar-multirow-example.js","../packages/material-examples/toolbar-overview/toolbar-overview-example.js","../packages/material-examples/tooltip-overview/tooltip-overview-example.js","../packages/material-examples/tooltip-position/tooltip-position-example.js","../packages/material-examples/example-module.js","../packages/material-examples/example-data.js","../packages/material-examples/public-api.js","../packages/material-examples/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { NgModule } from \"@angular/core\";\nimport { CdkTableModule } from \"@angular/cdk/table\";\nimport { MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatPaginatorModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSortModule, MatSlideToggleModule, MatSnackBarModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatFormFieldModule, MatExpansionModule, MatStepperModule } from \"@angular/material\";\nexport class ExampleMaterialModule {\n}\nExampleMaterialModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [\n                    CdkTableModule,\n                    MatAutocompleteModule,\n                    MatButtonModule,\n                    MatButtonToggleModule,\n                    MatCardModule,\n                    MatCheckboxModule,\n                    MatChipsModule,\n                    MatDatepickerModule,\n                    MatDialogModule,\n                    MatExpansionModule,\n                    MatFormFieldModule,\n                    MatGridListModule,\n                    MatIconModule,\n                    MatInputModule,\n                    MatListModule,\n                    MatMenuModule,\n                    MatProgressBarModule,\n                    MatProgressSpinnerModule,\n                    MatRadioModule,\n                    MatSelectModule,\n                    MatSlideToggleModule,\n                    MatSliderModule,\n                    MatSidenavModule,\n                    MatSnackBarModule,\n                    MatStepperModule,\n                    MatTabsModule,\n                    MatToolbarModule,\n                    MatTooltipModule,\n                    MatPaginatorModule,\n                    MatSortModule,\n                    MatTableModule\n                ]\n            },] },\n];\n/** @nocollapse */\nExampleMaterialModule.ctorParameters = () => [];\nfunction ExampleMaterialModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ExampleMaterialModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ExampleMaterialModule.ctorParameters;\n}\n//# sourceMappingURL=material-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { map } from \"rxjs/operators/map\";\nexport class User {\n    /**\n     * @param {?} name\n     */\n    constructor(name) {\n        this.name = name;\n    }\n}\nfunction User_tsickle_Closure_declarations() {\n    /** @type {?} */\n    User.prototype.name;\n}\n/**\n * \\@title Display value autocomplete\n */\nexport class AutocompleteDisplayExample {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = [\n            new User('Mary'),\n            new User('Shelley'),\n            new User('Igor')\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges\n            .pipe(startWith(/** @type {?} */ ({})), map(user => user && typeof user === 'object' ? user.name : user), map(name => name ? this.filter(name) : this.options.slice()));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    filter(name) {\n        return this.options.filter(option => option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n    }\n    /**\n     * @param {?} user\n     * @return {?}\n     */\n    displayFn(user) {\n        return user ? user.name : user;\n    }\n}\nAutocompleteDisplayExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-display-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input type=\\\"text\\\" placeholder=\\\"Assignee\\\" aria-label=\\\"Assignee\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\"><mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">{{ option.name }}</mat-option></mat-autocomplete></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nAutocompleteDisplayExample.ctorParameters = () => [];\nfunction AutocompleteDisplayExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    AutocompleteDisplayExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    AutocompleteDisplayExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteDisplayExample.prototype.myControl;\n    /** @type {?} */\n    AutocompleteDisplayExample.prototype.options;\n    /** @type {?} */\n    AutocompleteDisplayExample.prototype.filteredOptions;\n}\n//# sourceMappingURL=autocomplete-display-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { map } from \"rxjs/operators/map\";\n/**\n * \\@title Filter autocomplete\n */\nexport class AutocompleteFilterExample {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = [\n            'One',\n            'Two',\n            'Three'\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges\n            .pipe(startWith(''), map(val => this.filter(val)));\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    filter(val) {\n        return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n    }\n}\nAutocompleteFilterExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-filter-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\"><mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">{{ option }}</mat-option></mat-autocomplete></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nAutocompleteFilterExample.ctorParameters = () => [];\nfunction AutocompleteFilterExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    AutocompleteFilterExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    AutocompleteFilterExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteFilterExample.prototype.myControl;\n    /** @type {?} */\n    AutocompleteFilterExample.prototype.options;\n    /** @type {?} */\n    AutocompleteFilterExample.prototype.filteredOptions;\n}\n//# sourceMappingURL=autocomplete-filter-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { map } from \"rxjs/operators/map\";\nexport class State {\n    /**\n     * @param {?} name\n     * @param {?} population\n     * @param {?} flag\n     */\n    constructor(name, population, flag) {\n        this.name = name;\n        this.population = population;\n        this.flag = flag;\n    }\n}\nfunction State_tsickle_Closure_declarations() {\n    /** @type {?} */\n    State.prototype.name;\n    /** @type {?} */\n    State.prototype.population;\n    /** @type {?} */\n    State.prototype.flag;\n}\n/**\n * \\@title Autocomplete overview\n */\nexport class AutocompleteOverviewExample {\n    constructor() {\n        this.states = [\n            {\n                name: 'Arkansas',\n                population: '2.978M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n            },\n            {\n                name: 'California',\n                population: '39.14M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n            },\n            {\n                name: 'Florida',\n                population: '20.27M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n            },\n            {\n                name: 'Texas',\n                population: '27.47M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n            }\n        ];\n        this.stateCtrl = new FormControl();\n        this.filteredStates = this.stateCtrl.valueChanges\n            .pipe(startWith(''), map(state => state ? this.filterStates(state) : this.states.slice()));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    filterStates(name) {\n        return this.states.filter(state => state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n    }\n}\nAutocompleteOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-overview-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"State\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\"><mat-option *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.name\\\"><img style=\\\"vertical-align:middle;\\\" aria-hidden src=\\\"{{state.flag}}\\\" height=\\\"25\\\"> <span>{{ state.name }}</span> | <small>Population: {{state.population}}</small></mat-option></mat-autocomplete></mat-form-field><br><mat-slide-toggle [checked]=\\\"stateCtrl.disabled\\\" (change)=\\\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\\\">Disable Input?</mat-slide-toggle></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nAutocompleteOverviewExample.ctorParameters = () => [];\nfunction AutocompleteOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    AutocompleteOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    AutocompleteOverviewExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteOverviewExample.prototype.stateCtrl;\n    /** @type {?} */\n    AutocompleteOverviewExample.prototype.filteredStates;\n    /** @type {?} */\n    AutocompleteOverviewExample.prototype.states;\n}\n//# sourceMappingURL=autocomplete-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Simple autocomplete\n */\nexport class AutocompleteSimpleExample {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = [\n            'One',\n            'Two',\n            'Three'\n        ];\n    }\n}\nAutocompleteSimpleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-simple-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\"><mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">{{ option }}</mat-option></mat-autocomplete></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nAutocompleteSimpleExample.ctorParameters = () => [];\nfunction AutocompleteSimpleExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    AutocompleteSimpleExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    AutocompleteSimpleExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteSimpleExample.prototype.myControl;\n    /** @type {?} */\n    AutocompleteSimpleExample.prototype.options;\n}\n//# sourceMappingURL=autocomplete-simple-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic buttons\n */\nexport class ButtonOverviewExample {\n}\nButtonOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-overview-example',\n                template: \"<button mat-button>Click me!</button>\",\n            },] },\n];\n/** @nocollapse */\nButtonOverviewExample.ctorParameters = () => [];\nfunction ButtonOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ButtonOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ButtonOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=button-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Exclusive selection\n */\nexport class ButtonToggleExclusiveExample {\n}\nButtonToggleExclusiveExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-toggle-exclusive-example',\n                template: \"<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\"><mat-button-toggle value=\\\"left\\\"><mat-icon>format_align_left</mat-icon></mat-button-toggle><mat-button-toggle value=\\\"center\\\"><mat-icon>format_align_center</mat-icon></mat-button-toggle><mat-button-toggle value=\\\"right\\\"><mat-icon>format_align_right</mat-icon></mat-button-toggle><mat-button-toggle value=\\\"justify\\\" disabled=\\\"disabled\\\"><mat-icon>format_align_justify</mat-icon></mat-button-toggle></mat-button-toggle-group><div class=\\\"example-selected-value\\\">Selected value: {{group.value}}</div>\",\n                styles: [\".example-selected-value { margin: 15px 0; } \"],\n            },] },\n];\n/** @nocollapse */\nButtonToggleExclusiveExample.ctorParameters = () => [];\nfunction ButtonToggleExclusiveExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ButtonToggleExclusiveExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ButtonToggleExclusiveExample.ctorParameters;\n}\n//# sourceMappingURL=button-toggle-exclusive-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic button-toggles\n */\nexport class ButtonToggleOverviewExample {\n}\nButtonToggleOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-toggle-overview-example',\n                template: \"<mat-button-toggle>Toggle me!</mat-button-toggle>\",\n            },] },\n];\n/** @nocollapse */\nButtonToggleOverviewExample.ctorParameters = () => [];\nfunction ButtonToggleOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ButtonToggleOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ButtonToggleOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=button-toggle-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Button varieties\n */\nexport class ButtonTypesExample {\n}\nButtonTypesExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-types-example',\n                template: \"<h3>Basic Buttons</h3><div class=\\\"button-row\\\"><button mat-button>Basic</button> <button mat-button color=\\\"primary\\\">Primary</button> <button mat-button color=\\\"accent\\\">Accent</button> <button mat-button color=\\\"warn\\\">Warn</button> <button mat-button disabled=\\\"disabled\\\">Disabled</button> <a mat-button routerLink=\\\".\\\">Link</a></div><h3>Raised Buttons</h3><div class=\\\"button-row\\\"><button mat-raised-button>Basic</button> <button mat-raised-button color=\\\"primary\\\">Primary</button> <button mat-raised-button color=\\\"accent\\\">Accent</button> <button mat-raised-button color=\\\"warn\\\">Warn</button> <button mat-raised-button disabled=\\\"disabled\\\">Disabled</button> <a mat-raised-button routerLink=\\\".\\\">Link</a></div><h3>Icon Buttons</h3><div class=\\\"button-row\\\"><button mat-icon-button><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button color=\\\"primary\\\"><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button color=\\\"accent\\\"><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button color=\\\"warn\\\"><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button disabled=\\\"disabled\\\"><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button></div><h3>Fab Buttons</h3><div class=\\\"button-row\\\"><button mat-fab>Basic</button> <button mat-fab color=\\\"primary\\\">Primary</button> <button mat-fab color=\\\"accent\\\">Accent</button> <button mat-fab color=\\\"warn\\\">Warn</button> <button mat-fab disabled=\\\"disabled\\\">Disabled</button> <button mat-fab><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <a mat-fab routerLink=\\\".\\\">Link</a></div><h3>Mini Fab Buttons</h3><div class=\\\"button-row\\\"><button mat-mini-fab>Basic</button> <button mat-mini-fab color=\\\"primary\\\">Primary</button> <button mat-mini-fab color=\\\"accent\\\">Accent</button> <button mat-mini-fab color=\\\"warn\\\">Warn</button> <button mat-mini-fab disabled=\\\"disabled\\\">Disabled</button> <button mat-mini-fab><mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <a mat-mini-fab routerLink=\\\".\\\">Link</a></div>\",\n                styles: [\".example-button-row { display: flex; align-items: center; justify-content: space-around; } \"],\n            },] },\n];\n/** @nocollapse */\nButtonTypesExample.ctorParameters = () => [];\nfunction ButtonTypesExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ButtonTypesExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ButtonTypesExample.ctorParameters;\n}\n//# sourceMappingURL=button-types-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Card with multiple sections\n */\nexport class CardFancyExample {\n}\nCardFancyExample.decorators = [\n    { type: Component, args: [{\n                selector: 'card-fancy-example',\n                template: \"<mat-card class=\\\"example-card\\\"><mat-card-header><div mat-card-avatar class=\\\"example-header-image\\\"></div><mat-card-title>Shiba Inu</mat-card-title><mat-card-subtitle>Dog Breed</mat-card-subtitle></mat-card-header><img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"><mat-card-content><p>The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting.</p></mat-card-content><mat-card-actions><button mat-button>LIKE</button> <button mat-button>SHARE</button></mat-card-actions></mat-card>\",\n                styles: [\".example-card { width: 400px; } .example-header-image { background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover; } \"],\n            },] },\n];\n/** @nocollapse */\nCardFancyExample.ctorParameters = () => [];\nfunction CardFancyExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    CardFancyExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    CardFancyExample.ctorParameters;\n}\n//# sourceMappingURL=card-fancy-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic cards\n */\nexport class CardOverviewExample {\n}\nCardOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'card-overview-example',\n                template: \"<mat-card>Simple card</mat-card>\",\n            },] },\n];\n/** @nocollapse */\nCardOverviewExample.ctorParameters = () => [];\nfunction CardOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    CardOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    CardOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=card-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\n/**\n * \\@title Basic CDK data-table\n */\nexport class CdkTableBasicExample {\n    constructor() {\n        this.displayedColumns = ['userId', 'userName', 'progress', 'color'];\n        this.exampleDatabase = new ExampleDatabase();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSource = new ExampleDataSource(this.exampleDatabase);\n    }\n}\nCdkTableBasicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-table-basic-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } /* * Styles to make the demo's cdk-table match the material design spec * https://material.io/guidelines/components/data-tables.html */ .example-table { flex: 1 1 auto; overflow: auto; max-height: 500px; } .example-header-row, .example-row { display: flex; border-bottom: 1px solid #ccc; align-items: center; height: 32px; padding: 0 8px; } .example-cell, .example-header-cell { flex: 1; } .example-header-cell { font-size: 12px; font-weight: bold; color: rgba(0, 0, 0, 0.54); } .example-cell { font-size: 13px; color: rgba(0, 0, 0, 0.87); } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><cdk-table #table [dataSource]=\\\"dataSource\\\" class=\\\"example-table\\\"><ng-container cdkColumnDef=\\\"userId\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">ID</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\">{{row.id}}</cdk-cell></ng-container><ng-container cdkColumnDef=\\\"progress\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">Progress</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\">{{row.progress}}%</cdk-cell></ng-container><ng-container cdkColumnDef=\\\"userName\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">Name</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\">{{row.name}}</cdk-cell></ng-container><ng-container cdkColumnDef=\\\"color\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">Color</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\" [style.color]=\\\"row.color\\\">{{row.color}}</cdk-cell></ng-container><cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\" class=\\\"example-header-row\\\"></cdk-header-row><cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"example-row\\\"></cdk-row></cdk-table></div>\",\n            },] },\n];\n/** @nocollapse */\nCdkTableBasicExample.ctorParameters = () => [];\nfunction CdkTableBasicExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    CdkTableBasicExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    CdkTableBasicExample.ctorParameters;\n    /** @type {?} */\n    CdkTableBasicExample.prototype.displayedColumns;\n    /** @type {?} */\n    CdkTableBasicExample.prototype.exampleDatabase;\n    /** @type {?} */\n    CdkTableBasicExample.prototype.dataSource;\n}\n/**\n * Constants used to fill up our data base.\n */\nconst /** @type {?} */ COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * @record\n */\nexport function UserData() { }\nfunction UserData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UserData.prototype.id;\n    /** @type {?} */\n    UserData.prototype.name;\n    /** @type {?} */\n    UserData.prototype.progress;\n    /** @type {?} */\n    UserData.prototype.color;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n    constructor() {\n        /**\n         * Stream that emits whenever the data has been modified.\n         */\n        this.dataChange = new BehaviorSubject([]);\n        // Fill up the database with 100 users.\n        for (let /** @type {?} */ i = 0; i < 100; i++) {\n            this.addUser();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.dataChange.value; }\n    /**\n     * Adds a new user to the database.\n     * @return {?}\n     */\n    addUser() {\n        const /** @type {?} */ copiedData = this.data.slice();\n        copiedData.push(this.createNewUser());\n        this.dataChange.next(copiedData);\n    }\n    /**\n     * Builds and returns a new User.\n     * @return {?}\n     */\n    createNewUser() {\n        const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n            NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n        return {\n            id: (this.data.length + 1).toString(),\n            name: name,\n            progress: Math.round(Math.random() * 100).toString(),\n            color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n        };\n    }\n}\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n    /**\n     * Stream that emits whenever the data has been modified.\n     * @type {?}\n     */\n    ExampleDatabase.prototype.dataChange;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} _exampleDatabase\n     */\n    constructor(_exampleDatabase) {\n        super();\n        this._exampleDatabase = _exampleDatabase;\n    }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        return this._exampleDatabase.dataChange;\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype._exampleDatabase;\n}\n//# sourceMappingURL=cdk-table-basic-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Configurable checkbox\n */\nexport class CheckboxConfigurableExample {\n    constructor() {\n        this.checked = false;\n        this.indeterminate = false;\n        this.align = 'start';\n        this.disabled = false;\n    }\n}\nCheckboxConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'checkbox-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Checkbox configuration</h2><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"indeterminate\\\">Indeterminate</mat-checkbox></section><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Align:</label><mat-radio-group [(ngModel)]=\\\"align\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"start\\\">Start</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"end\\\">End</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox></section></mat-card-content></mat-card><mat-card class=\\\"result\\\"><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\" [(indeterminate)]=\\\"indeterminate\\\" [align]=\\\"align\\\" [disabled]=\\\"disabled\\\">I'm a checkbox</mat-checkbox></section></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 0 10px; } \"],\n            },] },\n];\n/** @nocollapse */\nCheckboxConfigurableExample.ctorParameters = () => [];\nfunction CheckboxConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    CheckboxConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    CheckboxConfigurableExample.ctorParameters;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.checked;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.indeterminate;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.align;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.disabled;\n}\n//# sourceMappingURL=checkbox-configurable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic checkboxes\n */\nexport class CheckboxOverviewExample {\n}\nCheckboxOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'checkbox-overview-example',\n                template: \"<mat-checkbox>Check me!</mat-checkbox>\",\n            },] },\n];\n/** @nocollapse */\nCheckboxOverviewExample.ctorParameters = () => [];\nfunction CheckboxOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    CheckboxOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    CheckboxOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=checkbox-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { ENTER, COMMA } from \"@angular/cdk/keycodes\";\n/**\n * \\@title Chips with input\n */\nexport class ChipsInputExample {\n    constructor() {\n        this.visible = true;\n        this.selectable = true;\n        this.removable = true;\n        this.addOnBlur = true;\n        // Enter, comma\n        this.separatorKeysCodes = [ENTER, COMMA];\n        this.fruits = [\n            { name: 'Lemon' },\n            { name: 'Lime' },\n            { name: 'Apple' },\n        ];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    add(event) {\n        let /** @type {?} */ input = event.input;\n        let /** @type {?} */ value = event.value;\n        // Add our fruit\n        if ((value || '').trim()) {\n            this.fruits.push({ name: value.trim() });\n        }\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n    /**\n     * @param {?} fruit\n     * @return {?}\n     */\n    remove(fruit) {\n        let /** @type {?} */ index = this.fruits.indexOf(fruit);\n        if (index >= 0) {\n            this.fruits.splice(index, 1);\n        }\n    }\n}\nChipsInputExample.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-input-example',\n                template: \"<mat-form-field class=\\\"demo-chip-list\\\"><mat-chip-list #chipList><mat-chip *ngFor=\\\"let fruit of fruits\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\" (remove)=\\\"remove(fruit)\\\">{{fruit.name}}<mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon></mat-chip><input placeholder=\\\"New fruit...\\\" [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\" (matChipInputTokenEnd)=\\\"add($event)\\\"></mat-chip-list></mat-form-field>\",\n                styles: [\".demo-chip-list { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nChipsInputExample.ctorParameters = () => [];\nfunction ChipsInputExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ChipsInputExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ChipsInputExample.ctorParameters;\n    /** @type {?} */\n    ChipsInputExample.prototype.visible;\n    /** @type {?} */\n    ChipsInputExample.prototype.selectable;\n    /** @type {?} */\n    ChipsInputExample.prototype.removable;\n    /** @type {?} */\n    ChipsInputExample.prototype.addOnBlur;\n    /** @type {?} */\n    ChipsInputExample.prototype.separatorKeysCodes;\n    /** @type {?} */\n    ChipsInputExample.prototype.fruits;\n}\n//# sourceMappingURL=chips-input-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic chips\n */\nexport class ChipsOverviewExample {\n}\nChipsOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-overview-example',\n                template: \"<mat-chip-list><mat-chip>One fish</mat-chip><mat-chip>Two fish</mat-chip><mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip><mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip></mat-chip-list>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nChipsOverviewExample.ctorParameters = () => [];\nfunction ChipsOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ChipsOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ChipsOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=chips-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Stacked chips\n */\nexport class ChipsStackedExample {\n    constructor() {\n        this.availableColors = [\n            { name: 'none', color: '' },\n            { name: 'Primary', color: 'primary' },\n            { name: 'Accent', color: 'accent' },\n            { name: 'Warn', color: 'warn' }\n        ];\n    }\n}\nChipsStackedExample.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-stacked-example',\n                template: \"<mat-chip-list class=\\\"mat-chip-list-stacked\\\"><mat-chip *ngFor=\\\"let chip of availableColors\\\" selected=\\\"true\\\" [color]=\\\"chip.color\\\">{{chip.name}}</mat-chip></mat-chip-list>\",\n                styles: [\"mat-chip { max-width: 200px; } \"],\n            },] },\n];\n/** @nocollapse */\nChipsStackedExample.ctorParameters = () => [];\nfunction ChipsStackedExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ChipsStackedExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ChipsStackedExample.ctorParameters;\n    /** @type {?} */\n    ChipsStackedExample.prototype.color;\n    /** @type {?} */\n    ChipsStackedExample.prototype.availableColors;\n}\n//# sourceMappingURL=chips-stacked-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Datepicker open method\n */\nexport class DatepickerApiExample {\n}\nDatepickerApiExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-api-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker #picker></mat-datepicker></mat-form-field><button mat-raised-button (click)=\\\"picker.open()\\\">Open</button>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerApiExample.ctorParameters = () => [];\nfunction DatepickerApiExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerApiExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerApiExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-api-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Disabled datepicker\n */\nexport class DatepickerDisabledExample {\n}\nDatepickerDisabledExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-disabled-example',\n                template: \"<p><mat-form-field><input matInput [matDatepicker]=\\\"dp1\\\" placeholder=\\\"Completely disabled\\\" disabled=\\\"disabled\\\"><mat-datepicker-toggle matSuffix [for]=\\\"dp1\\\"></mat-datepicker-toggle><mat-datepicker #dp1></mat-datepicker></mat-form-field></p><p><mat-form-field><input matInput [matDatepicker]=\\\"dp2\\\" placeholder=\\\"Popup disabled\\\"><mat-datepicker-toggle matSuffix [for]=\\\"dp2\\\" disabled=\\\"disabled\\\"></mat-datepicker-toggle><mat-datepicker #dp2></mat-datepicker></mat-form-field></p><p><mat-form-field><input matInput [matDatepicker]=\\\"dp3\\\" placeholder=\\\"Input disabled\\\" disabled=\\\"disabled\\\"><mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle><mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker></mat-form-field></p>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerDisabledExample.ctorParameters = () => [];\nfunction DatepickerDisabledExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerDisabledExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerDisabledExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-disabled-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Datepicker input and change events\n */\nexport class DatepickerEventsExample {\n    constructor() {\n        this.events = [];\n    }\n    /**\n     * @param {?} type\n     * @param {?} event\n     * @return {?}\n     */\n    addEvent(type, event) {\n        this.events.push(`${type}: ${event.value}`);\n    }\n}\nDatepickerEventsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-events-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Input & change events\\\" (dateInput)=\\\"addEvent('input', $event)\\\" (dateChange)=\\\"addEvent('change', $event)\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field><div class=\\\"example-events\\\"><div *ngFor=\\\"let e of events\\\">{{e}}</div></div>\",\n                styles: [\".example-events { width: 400px; height: 200px; border: 1px solid #555; overflow: auto; } \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerEventsExample.ctorParameters = () => [];\nfunction DatepickerEventsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerEventsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerEventsExample.ctorParameters;\n    /** @type {?} */\n    DatepickerEventsExample.prototype.events;\n}\n//# sourceMappingURL=datepicker-events-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Datepicker with filter validation\n */\nexport class DatepickerFilterExample {\n    constructor() {\n        this.myFilter = (d) => {\n            const /** @type {?} */ day = d.getDay();\n            // Prevent Saturday and Sunday from being selected.\n            return day !== 0 && day !== 6;\n        };\n    }\n}\nDatepickerFilterExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-filter-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerFilterExample.ctorParameters = () => [];\nfunction DatepickerFilterExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerFilterExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerFilterExample.ctorParameters;\n    /** @type {?} */\n    DatepickerFilterExample.prototype.myFilter;\n}\n//# sourceMappingURL=datepicker-filter-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from \"@angular/material/core\";\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from \"moment\";\nimport { default as _rollupMoment } from \"moment\";\nconst /** @type {?} */ moment = _rollupMoment || _moment;\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const /** @type {?} */ MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n/**\n * \\@title Datepicker with custom formats\n */\nexport class DatepickerFormatsExample {\n    constructor() {\n        this.date = new FormControl(moment());\n    }\n}\nDatepickerFormatsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-formats-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Verbose datepicker\\\" [formControl]=\\\"date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle><mat-datepicker #dp></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n                providers: [\n                    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n                    // application's root module. We provide it at the component level here, due to limitations of\n                    // our example generation script.\n                    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n                    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n                ],\n            },] },\n];\n/** @nocollapse */\nDatepickerFormatsExample.ctorParameters = () => [];\nfunction DatepickerFormatsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerFormatsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerFormatsExample.ctorParameters;\n    /** @type {?} */\n    DatepickerFormatsExample.prototype.date;\n}\n//# sourceMappingURL=datepicker-formats-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from \"@angular/material/core\";\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\n/**\n * \\@title Datepicker with different locale\n */\nexport class DatepickerLocaleExample {\n    /**\n     * @param {?} adapter\n     */\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    /**\n     * @return {?}\n     */\n    french() {\n        this.adapter.setLocale('fr');\n    }\n}\nDatepickerLocaleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-locale-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Different locale\\\"><mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle><mat-datepicker #dp></mat-datepicker></mat-form-field><button mat-button (click)=\\\"french()\\\">Dynamically switch to French</button>\",\n                styles: [\"/** No CSS for this example */ \"],\n                providers: [\n                    // The locale would typically be provided on the root module of your application. We do it at\n                    // the component level here, due to limitations of our example generation script.\n                    { provide: MAT_DATE_LOCALE, useValue: 'ja-JP' },\n                    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n                    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n                    // here, due to limitations of our example generation script.\n                    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n                    { provide: MAT_DATE_FORMATS, useValue: ɵ0 },\n                ],\n            },] },\n];\n/** @nocollapse */\nDatepickerLocaleExample.ctorParameters = () => [\n    { type: DateAdapter, },\n];\nfunction DatepickerLocaleExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerLocaleExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerLocaleExample.ctorParameters;\n    /** @type {?} */\n    DatepickerLocaleExample.prototype.adapter;\n}\nexport { ɵ0 };\n//# sourceMappingURL=datepicker-locale-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Datepicker with min & max validation\n */\nexport class DatepickerMinMaxExample {\n    constructor() {\n        this.minDate = new Date(2000, 0, 1);\n        this.maxDate = new Date(2020, 0, 1);\n    }\n}\nDatepickerMinMaxExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-min-max-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerMinMaxExample.ctorParameters = () => [];\nfunction DatepickerMinMaxExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerMinMaxExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerMinMaxExample.ctorParameters;\n    /** @type {?} */\n    DatepickerMinMaxExample.prototype.minDate;\n    /** @type {?} */\n    DatepickerMinMaxExample.prototype.maxDate;\n}\n//# sourceMappingURL=datepicker-min-max-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from \"@angular/material-moment-adapter\";\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from \"@angular/material/core\";\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from \"moment\";\nimport { default as _rollupMoment } from \"moment\";\nconst /** @type {?} */ moment = _rollupMoment || _moment;\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\n/**\n * \\@title Datepicker that uses Moment.js dates\n */\nexport class DatepickerMomentExample {\n    constructor() {\n        // Datepicker takes `Moment` objects instead of `Date` objects.\n        this.date = new FormControl(moment([2017, 0, 1]));\n    }\n}\nDatepickerMomentExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-moment-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Moment.js datepicker\\\" [formControl]=\\\"date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle><mat-datepicker #dp></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n                providers: [\n                    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n                    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n                    // here, due to limitations of our example generation script.\n                    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n                    { provide: MAT_DATE_FORMATS, useValue: ɵ0 },\n                ],\n            },] },\n];\n/** @nocollapse */\nDatepickerMomentExample.ctorParameters = () => [];\nfunction DatepickerMomentExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerMomentExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerMomentExample.ctorParameters;\n    /** @type {?} */\n    DatepickerMomentExample.prototype.date;\n}\nexport { ɵ0 };\n//# sourceMappingURL=datepicker-moment-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic datepicker\n */\nexport class DatepickerOverviewExample {\n}\nDatepickerOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-overview-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerOverviewExample.ctorParameters = () => [];\nfunction DatepickerOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Datepicker start date\n */\nexport class DatepickerStartViewExample {\n    constructor() {\n        this.startDate = new Date(1990, 0, 1);\n    }\n}\nDatepickerStartViewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-start-view-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerStartViewExample.ctorParameters = () => [];\nfunction DatepickerStartViewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerStartViewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerStartViewExample.ctorParameters;\n    /** @type {?} */\n    DatepickerStartViewExample.prototype.startDate;\n}\n//# sourceMappingURL=datepicker-start-view-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Datepicker touch UI\n */\nexport class DatepickerTouchExample {\n}\nDatepickerTouchExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-touch-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker touchUi=\\\"true\\\" #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerTouchExample.ctorParameters = () => [];\nfunction DatepickerTouchExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerTouchExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerTouchExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-touch-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Datepicker selected value\n */\nexport class DatepickerValueExample {\n    constructor() {\n        this.date = new FormControl(new Date());\n        this.serializedDate = new FormControl((new Date()).toISOString());\n    }\n}\nDatepickerValueExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-value-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Angular forms\\\" [formControl]=\\\"date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle><mat-datepicker #picker1></mat-datepicker></mat-form-field><mat-form-field><input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Angular forms (w/ deserialization)\\\" [formControl]=\\\"serializedDate\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle><mat-datepicker #picker2></mat-datepicker></mat-form-field><mat-form-field><input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Value binding\\\" [value]=\\\"date.value\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle><mat-datepicker #picker3></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nDatepickerValueExample.ctorParameters = () => [];\nfunction DatepickerValueExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DatepickerValueExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DatepickerValueExample.ctorParameters;\n    /** @type {?} */\n    DatepickerValueExample.prototype.date;\n    /** @type {?} */\n    DatepickerValueExample.prototype.serializedDate;\n}\n//# sourceMappingURL=datepicker-value-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material\";\n/**\n * \\@title Dialog with header, scrollable content and actions\n */\nexport class DialogContentExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        const /** @type {?} */ dialogRef = this.dialog.open(DialogContentExampleDialog, {\n            height: '350px'\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log(`Dialog result: ${result}`);\n        });\n    }\n}\nDialogContentExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-content-example',\n                template: \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\",\n            },] },\n];\n/** @nocollapse */\nDialogContentExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogContentExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogContentExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogContentExample.ctorParameters;\n    /** @type {?} */\n    DialogContentExample.prototype.dialog;\n}\nexport class DialogContentExampleDialog {\n}\nDialogContentExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-content-example-dialog',\n                template: \"<h2 mat-dialog-title>Install Angular</h2><mat-dialog-content><h3>DEVELOP ACROSS ALL PLATFORMS</h3><p>Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop.</p><h3>SPEED & PERFORMANCE</h3><p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web Workers and server-side rendering. Angular puts you in control over scalability. Meet huge data requirements by building data models on RxJS, Immutable.js or another push-model.</p><h3>INCREDIBLE TOOLING</h3><p>Build features quickly with simple, declarative templates. Extend the template language with your own components and use a wide array of existing components. Get immediate Angular-specific help and feedback with nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather than trying to make the code work.</p><h3>LOVED BY MILLIONS</h3><p>From prototype through global deployment, Angular delivers the productivity and scalable infrastructure that supports Google's largest applications.</p></mat-dialog-content><mat-dialog-actions><button mat-button [mat-dialog-close]=\\\"true\\\" tabindex=\\\"1\\\">Install</button> <button mat-button mat-dialog-close tabindex=\\\"-1\\\">Cancel</button></mat-dialog-actions>\",\n            },] },\n];\n/** @nocollapse */\nDialogContentExampleDialog.ctorParameters = () => [];\nfunction DialogContentExampleDialog_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogContentExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogContentExampleDialog.ctorParameters;\n}\n//# sourceMappingURL=dialog-content-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, Inject } from \"@angular/core\";\nimport { MatDialog, MAT_DIALOG_DATA } from \"@angular/material\";\n/**\n * \\@title Injecting data when opening a dialog\n */\nexport class DialogDataExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        this.dialog.open(DialogDataExampleDialog, {\n            data: {\n                animal: 'panda'\n            }\n        });\n    }\n}\nDialogDataExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-data-example',\n                template: \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\",\n            },] },\n];\n/** @nocollapse */\nDialogDataExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogDataExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogDataExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogDataExample.ctorParameters;\n    /** @type {?} */\n    DialogDataExample.prototype.dialog;\n}\nexport class DialogDataExampleDialog {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.data = data;\n    }\n}\nDialogDataExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-data-example-dialog',\n                template: \"<h1 mat-dialog-title>Favorite Animal</h1><div mat-dialog-content>My favorite animal is:<ul><li><span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda</li><li><span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn</li><li><span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion</li></ul></div>\",\n            },] },\n];\n/** @nocollapse */\nDialogDataExampleDialog.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] },] },\n];\nfunction DialogDataExampleDialog_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogDataExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogDataExampleDialog.ctorParameters;\n    /** @type {?} */\n    DialogDataExampleDialog.prototype.data;\n}\n//# sourceMappingURL=dialog-data-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material\";\n/**\n * \\@title Dialog elements\n */\nexport class DialogElementsExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        this.dialog.open(DialogElementsExampleDialog);\n    }\n}\nDialogElementsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-elements-example',\n                template: \"<button mat-button (click)=\\\"openDialog()\\\">Launch dialog</button>\",\n            },] },\n];\n/** @nocollapse */\nDialogElementsExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogElementsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogElementsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogElementsExample.ctorParameters;\n    /** @type {?} */\n    DialogElementsExample.prototype.dialog;\n}\nexport class DialogElementsExampleDialog {\n}\nDialogElementsExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-elements-example-dialog',\n                template: \"<h1 mat-dialog-title>Dialog with elements</h1><div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div><div mat-dialog-actions><button mat-button mat-dialog-close>Close</button></div>\",\n            },] },\n];\n/** @nocollapse */\nDialogElementsExampleDialog.ctorParameters = () => [];\nfunction DialogElementsExampleDialog_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogElementsExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogElementsExampleDialog.ctorParameters;\n}\n//# sourceMappingURL=dialog-elements-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, Inject } from \"@angular/core\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\n/**\n * \\@title Dialog Overview\n */\nexport class DialogOverviewExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        let /** @type {?} */ dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n            width: '250px',\n            data: { name: this.name, animal: this.animal }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.animal = result;\n        });\n    }\n}\nDialogOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-overview-example',\n                template: \"<ol><li><mat-form-field><input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\"></mat-form-field></li><li><button mat-raised-button (click)=\\\"openDialog()\\\">Pick one</button></li><li *ngIf=\\\"animal\\\">You chose: <i>{{animal}}</i></li></ol>\"\n            },] },\n];\n/** @nocollapse */\nDialogOverviewExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogOverviewExample.ctorParameters;\n    /** @type {?} */\n    DialogOverviewExample.prototype.animal;\n    /** @type {?} */\n    DialogOverviewExample.prototype.name;\n    /** @type {?} */\n    DialogOverviewExample.prototype.dialog;\n}\nexport class DialogOverviewExampleDialog {\n    /**\n     * @param {?} dialogRef\n     * @param {?} data\n     */\n    constructor(dialogRef, data) {\n        this.dialogRef = dialogRef;\n        this.data = data;\n    }\n    /**\n     * @return {?}\n     */\n    onNoClick() {\n        this.dialogRef.close();\n    }\n}\nDialogOverviewExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-overview-example-dialog',\n                template: \"<h1 mat-dialog-title>Hi {{data.name}}</h1><div mat-dialog-content><p>What's your favorite animal?</p><mat-form-field><input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.animal\\\"></mat-form-field></div><div mat-dialog-actions><button mat-button [mat-dialog-close]=\\\"data.animal\\\" tabindex=\\\"2\\\">Ok</button> <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">No Thanks</button></div>\",\n            },] },\n];\n/** @nocollapse */\nDialogOverviewExampleDialog.ctorParameters = () => [\n    { type: MatDialogRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] },] },\n];\nfunction DialogOverviewExampleDialog_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DialogOverviewExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DialogOverviewExampleDialog.ctorParameters;\n    /** @type {?} */\n    DialogOverviewExampleDialog.prototype.dialogRef;\n    /** @type {?} */\n    DialogOverviewExampleDialog.prototype.data;\n}\n//# sourceMappingURL=dialog-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Elevation CSS classes\n */\nexport class ElevationOverviewExample {\n    constructor() {\n        this.isActive = false;\n    }\n}\nElevationOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'elevation-overview-example',\n                styles: [\".example-container { padding: 16px; margin-bottom: 16px; } \"],\n                template: \"<div class=\\\"example-container\\\" [class.mat-elevation-z2]=\\\"!isActive\\\" [class.mat-elevation-z8]=\\\"isActive\\\">Example</div><button mat-button (click)=\\\"isActive = !isActive\\\">Toggle Elevation</button>\",\n            },] },\n];\n/** @nocollapse */\nElevationOverviewExample.ctorParameters = () => [];\nfunction ElevationOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ElevationOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ElevationOverviewExample.ctorParameters;\n    /** @type {?} */\n    ElevationOverviewExample.prototype.isActive;\n}\n//# sourceMappingURL=elevation-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic expansion panel\n */\nexport class ExpansionOverviewExample {\n    constructor() {\n        this.panelOpenState = false;\n    }\n}\nExpansionOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'expansion-overview-example',\n                template: \"<mat-accordion><mat-expansion-panel><mat-expansion-panel-header><mat-panel-title>Personal data</mat-panel-title><mat-panel-description>Type your name and age</mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"First name\\\"></mat-form-field><mat-form-field><input matInput placeholder=\\\"Age\\\"></mat-form-field></mat-expansion-panel><mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\"><mat-expansion-panel-header><mat-panel-title>Self aware panel</mat-panel-title><mat-panel-description>Currently I am {{panelOpenState ? 'open' : 'closed'}}</mat-panel-description></mat-expansion-panel-header><p>I'm visible because I am open</p></mat-expansion-panel></mat-accordion>\",\n            },] },\n];\n/** @nocollapse */\nExpansionOverviewExample.ctorParameters = () => [];\nfunction ExpansionOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ExpansionOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ExpansionOverviewExample.ctorParameters;\n    /** @type {?} */\n    ExpansionOverviewExample.prototype.panelOpenState;\n}\n//# sourceMappingURL=expansion-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Expansion panel as accordion\n */\nexport class ExpansionStepsExample {\n    constructor() {\n        this.step = 0;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setStep(index) {\n        this.step = index;\n    }\n    /**\n     * @return {?}\n     */\n    nextStep() {\n        this.step++;\n    }\n    /**\n     * @return {?}\n     */\n    prevStep() {\n        this.step--;\n    }\n}\nExpansionStepsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'expansion-steps-example',\n                template: \"<mat-accordion class=\\\"example-headers-align\\\"><mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle=\\\"true\\\"><mat-expansion-panel-header><mat-panel-title>Personal data</mat-panel-title><mat-panel-description>Type your name and age<mat-icon>account_circle</mat-icon></mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"First name\\\"></mat-form-field><mat-form-field><input matInput type=\\\"number\\\" min=\\\"1\\\" placeholder=\\\"Age\\\"></mat-form-field><mat-action-row><button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button></mat-action-row></mat-expansion-panel><mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\"><mat-expansion-panel-header><mat-panel-title>Destination</mat-panel-title><mat-panel-description>Type the country name<mat-icon>map</mat-icon></mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"Country\\\"></mat-form-field><mat-action-row><button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button> <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button></mat-action-row></mat-expansion-panel><mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle=\\\"true\\\"><mat-expansion-panel-header><mat-panel-title>Day of the trip</mat-panel-title><mat-panel-description>Inform the date you wish to travel<mat-icon>date_range</mat-icon></mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly=\\\"readonly\\\"></mat-form-field><mat-datepicker #picker></mat-datepicker><mat-action-row><button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button> <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button></mat-action-row></mat-expansion-panel></mat-accordion>\",\n                styles: [\".example-headers-align .mat-expansion-panel-header-title,  .example-headers-align .mat-expansion-panel-header-description { flex-basis: 0; } .example-headers-align .mat-expansion-panel-header-description { justify-content: space-between; align-items: center; } \"]\n            },] },\n];\n/** @nocollapse */\nExpansionStepsExample.ctorParameters = () => [];\nfunction ExpansionStepsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ExpansionStepsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ExpansionStepsExample.ctorParameters;\n    /** @type {?} */\n    ExpansionStepsExample.prototype.step;\n}\n//# sourceMappingURL=expansion-steps-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { FocusMonitor } from \"@angular/cdk/a11y\";\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, ElementRef, Input } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { MatFormFieldControl } from \"@angular/material\";\nimport { Subject } from \"rxjs/Subject\";\n/**\n * Data structure for holding telephone number.\n */\nexport class MyTel {\n    /**\n     * @param {?} area\n     * @param {?} exchange\n     * @param {?} subscriber\n     */\n    constructor(area, exchange, subscriber) {\n        this.area = area;\n        this.exchange = exchange;\n        this.subscriber = subscriber;\n    }\n}\nfunction MyTel_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MyTel.prototype.area;\n    /** @type {?} */\n    MyTel.prototype.exchange;\n    /** @type {?} */\n    MyTel.prototype.subscriber;\n}\n/**\n * Custom `MatFormFieldControl` for telephone number input.\n */\nexport class MyTelInput {\n    /**\n     * @param {?} fb\n     * @param {?} fm\n     * @param {?} elRef\n     */\n    constructor(fb, fm, elRef) {\n        this.fm = fm;\n        this.elRef = elRef;\n        this.stateChanges = new Subject();\n        this.focused = false;\n        this.ngControl = null;\n        this.errorState = false;\n        this.controlType = 'my-tel-input';\n        this.id = `my-tel-input-${MyTelInput.nextId++}`;\n        this.describedBy = '';\n        this._required = false;\n        this._disabled = false;\n        this.parts = fb.group({\n            'area': '',\n            'exchange': '',\n            'subscriber': '',\n        });\n        fm.monitor(elRef.nativeElement, true).subscribe((origin) => {\n            this.focused = !!origin;\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get empty() {\n        let /** @type {?} */ n = this.parts.value;\n        return !n.area && !n.exchange && !n.subscriber;\n    }\n    /**\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * @return {?}\n     */\n    get placeholder() {\n        return this._placeholder;\n    }\n    /**\n     * @param {?} plh\n     * @return {?}\n     */\n    set placeholder(plh) {\n        this._placeholder = plh;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    set required(req) {\n        this._required = coerceBooleanProperty(req);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} dis\n     * @return {?}\n     */\n    set disabled(dis) {\n        this._disabled = coerceBooleanProperty(dis);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        let /** @type {?} */ n = this.parts.value;\n        if (n.area.length == 3 && n.exchange.length == 3 && n.subscriber.length == 4) {\n            return new MyTel(n.area, n.exchange, n.subscriber);\n        }\n        return null;\n    }\n    /**\n     * @param {?} tel\n     * @return {?}\n     */\n    set value(tel) {\n        tel = tel || new MyTel('', '', '');\n        this.parts.setValue({ area: tel.area, exchange: tel.exchange, subscriber: tel.subscriber });\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.fm.stopMonitoring(this.elRef.nativeElement);\n    }\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this.describedBy = ids.join(' ');\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if ((/** @type {?} */ (event.target)).tagName.toLowerCase() != 'input') {\n            this.elRef.nativeElement.querySelector('input').focus();\n        }\n    }\n}\nMyTelInput.nextId = 0;\nMyTelInput.decorators = [\n    { type: Component, args: [{\n                selector: 'my-tel-input',\n                template: \"<div [formGroup]=\\\"parts\\\"><input class=\\\"area\\\" formControlName=\\\"area\\\" size=\\\"3\\\"> <span>&ndash;</span> <input class=\\\"exchange\\\" formControlName=\\\"exchange\\\" size=\\\"3\\\"> <span>&ndash;</span> <input class=\\\"subscriber\\\" formControlName=\\\"subscriber\\\" size=\\\"4\\\"></div>\",\n                styles: [\"div { display: flex; } input { border: none; background: none; padding: 0; outline: none; font: inherit; text-align: center; } span { opacity: 0; transition: opacity 200ms; } :host.floating span { opacity: 1; } \"],\n                providers: [{ provide: MatFormFieldControl, useExisting: MyTelInput }],\n                host: {\n                    '[class.floating]': 'shouldLabelFloat',\n                    '[id]': 'id',\n                    '[attr.aria-describedby]': 'describedBy',\n                }\n            },] },\n];\n/** @nocollapse */\nMyTelInput.ctorParameters = () => [\n    { type: FormBuilder, },\n    { type: FocusMonitor, },\n    { type: ElementRef, },\n];\nMyTelInput.propDecorators = {\n    \"placeholder\": [{ type: Input },],\n    \"required\": [{ type: Input },],\n    \"disabled\": [{ type: Input },],\n    \"value\": [{ type: Input },],\n};\nfunction MyTelInput_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MyTelInput.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MyTelInput.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MyTelInput.propDecorators;\n    /** @type {?} */\n    MyTelInput.nextId;\n    /** @type {?} */\n    MyTelInput.prototype.parts;\n    /** @type {?} */\n    MyTelInput.prototype.stateChanges;\n    /** @type {?} */\n    MyTelInput.prototype.focused;\n    /** @type {?} */\n    MyTelInput.prototype.ngControl;\n    /** @type {?} */\n    MyTelInput.prototype.errorState;\n    /** @type {?} */\n    MyTelInput.prototype.controlType;\n    /** @type {?} */\n    MyTelInput.prototype.id;\n    /** @type {?} */\n    MyTelInput.prototype.describedBy;\n    /** @type {?} */\n    MyTelInput.prototype._placeholder;\n    /** @type {?} */\n    MyTelInput.prototype._required;\n    /** @type {?} */\n    MyTelInput.prototype._disabled;\n    /** @type {?} */\n    MyTelInput.prototype.fm;\n    /** @type {?} */\n    MyTelInput.prototype.elRef;\n}\n/**\n * \\@title Form field with custom telephone number input control.\n */\nexport class FormFieldCustomControlExample {\n}\nFormFieldCustomControlExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-custom-control-example',\n                template: `\n    <mat-form-field>\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\n      <mat-icon matSuffix>phone</mat-icon>\n      <mat-hint>Include area code</mat-hint>\n    </mat-form-field>\n  `\n            },] },\n];\n/** @nocollapse */\nFormFieldCustomControlExample.ctorParameters = () => [];\nfunction FormFieldCustomControlExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldCustomControlExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldCustomControlExample.ctorParameters;\n}\n//# sourceMappingURL=form-field-custom-control-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\n/**\n * \\@title Form field with error messages\n */\nexport class FormFieldErrorExample {\n    constructor() {\n        this.email = new FormControl('', [Validators.required, Validators.email]);\n    }\n    /**\n     * @return {?}\n     */\n    getErrorMessage() {\n        return this.email.hasError('required') ? 'You must enter a value' :\n            this.email.hasError('email') ? 'Not a valid email' :\n                '';\n    }\n}\nFormFieldErrorExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-error-example',\n                template: \"<div class=\\\"example-container\\\"><mat-form-field><input matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required><mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error></mat-form-field></div>\",\n                styles: [\".example-container { display: flex; flex-direction: column; } .example-container > * { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nFormFieldErrorExample.ctorParameters = () => [];\nfunction FormFieldErrorExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldErrorExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldErrorExample.ctorParameters;\n    /** @type {?} */\n    FormFieldErrorExample.prototype.email;\n}\n//# sourceMappingURL=form-field-error-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Form field with hints\n */\nexport class FormFieldHintExample {\n}\nFormFieldHintExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-hint-example',\n                template: \"<div class=\\\"example-container\\\"><mat-form-field hintLabel=\\\"Max 10 characters\\\"><input matInput #input maxlength=\\\"10\\\" placeholder=\\\"Enter some input\\\"><mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/10</mat-hint></mat-form-field><mat-form-field><mat-select placeholder=\\\"Select me\\\"><mat-option value=\\\"option\\\">Option</mat-option></mat-select><mat-hint align=\\\"end\\\">Here's the dropdown arrow ^</mat-hint></mat-form-field></div>\",\n                styles: [\".example-container { display: flex; flex-direction: column; } .example-container > * { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nFormFieldHintExample.ctorParameters = () => [];\nfunction FormFieldHintExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldHintExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldHintExample.ctorParameters;\n}\n//# sourceMappingURL=form-field-hint-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n/**\n * \\@title Form field with label\n */\nexport class FormFieldLabelExample {\n    /**\n     * @param {?} fb\n     */\n    constructor(fb) {\n        this.options = fb.group({\n            hideRequired: false,\n            floatLabel: 'auto',\n        });\n    }\n}\nFormFieldLabelExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-label-example',\n                template: \"<div class=\\\"example-container\\\"><form class=\\\"example-container\\\" [formGroup]=\\\"options\\\"><mat-checkbox formControlName=\\\"hideRequired\\\">Hide required marker</mat-checkbox><div><label>Float label:</label><mat-radio-group formControlName=\\\"floatLabel\\\"><mat-radio-button value=\\\"auto\\\">Auto</mat-radio-button><mat-radio-button value=\\\"always\\\">Always</mat-radio-button><mat-radio-button value=\\\"never\\\">Never</mat-radio-button></mat-radio-group></div></form><mat-form-field [hideRequiredMarker]=\\\"options.value.hideRequired\\\" [floatLabel]=\\\"options.value.floatLabel\\\"><input matInput placeholder=\\\"Simple placeholder\\\" required></mat-form-field><mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\"><mat-label>Both a label and a placeholder</mat-label><input matInput placeholder=\\\"Simple placeholder\\\"></mat-form-field><mat-form-field [hideRequiredMarker]=\\\"options.value.hideRequired\\\" [floatLabel]=\\\"options.value.floatLabel\\\"><mat-select required><mat-option>-- None --</mat-option><mat-option value=\\\"option\\\">Option</mat-option></mat-select><mat-placeholder><mat-icon>favorite</mat-icon><b>Fancy</b> <i>placeholder</i></mat-placeholder></mat-form-field></div>\",\n                styles: [\".example-container { display: flex; flex-direction: column; } .example-container > * { width: 100%; } .example-container form { margin-bottom: 20px; } .example-container form > * { margin: 5px 0; } .example-container .mat-radio-button { margin: 0 5px; } \"]\n            },] },\n];\n/** @nocollapse */\nFormFieldLabelExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction FormFieldLabelExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldLabelExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldLabelExample.ctorParameters;\n    /** @type {?} */\n    FormFieldLabelExample.prototype.options;\n}\n//# sourceMappingURL=form-field-label-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Simple form field\n */\nexport class FormFieldOverviewExample {\n}\nFormFieldOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-overview-example',\n                template: \"<div class=\\\"example-container\\\"><mat-form-field><input matInput placeholder=\\\"Input\\\"></mat-form-field><mat-form-field><textarea matInput placeholder=\\\"Textarea\\\"></textarea></mat-form-field><mat-form-field><mat-select placeholder=\\\"Select\\\"><mat-option value=\\\"option\\\">Option</mat-option></mat-select></mat-form-field></div>\",\n                styles: [\".example-container { display: flex; flex-direction: column; } .example-container > * { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nFormFieldOverviewExample.ctorParameters = () => [];\nfunction FormFieldOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=form-field-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Form field with prefix & suffix\n */\nexport class FormFieldPrefixSuffixExample {\n    constructor() {\n        this.hide = true;\n    }\n}\nFormFieldPrefixSuffixExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-prefix-suffix-example',\n                template: \"<div class=\\\"example-container\\\"><mat-form-field><input matInput placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\"><mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon></mat-form-field><mat-form-field><input matInput placeholder=\\\"Amount\\\" type=\\\"number\\\" class=\\\"example-right-align\\\"> <span matPrefix>$&nbsp;</span> <span matSuffix>.00</span></mat-form-field></div>\",\n                styles: [\".example-container { display: flex; flex-direction: column; } .example-container > * { width: 100%; } .example-right-align { text-align: right; } input.example-right-align::-webkit-outer-spin-button, input.example-right-align::-webkit-inner-spin-button { display: none; } input.example-right-align { -moz-appearance: textfield; } \"]\n            },] },\n];\n/** @nocollapse */\nFormFieldPrefixSuffixExample.ctorParameters = () => [];\nfunction FormFieldPrefixSuffixExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldPrefixSuffixExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldPrefixSuffixExample.ctorParameters;\n    /** @type {?} */\n    FormFieldPrefixSuffixExample.prototype.hide;\n}\n//# sourceMappingURL=form-field-prefix-suffix-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n/**\n * \\@title Form field theming\n */\nexport class FormFieldThemingExample {\n    /**\n     * @param {?} fb\n     */\n    constructor(fb) {\n        this.options = fb.group({\n            'color': 'primary',\n            'fontSize': [16, Validators.min(10)],\n        });\n    }\n    /**\n     * @return {?}\n     */\n    getFontSize() {\n        return Math.max(10, this.options.value.fontSize);\n    }\n}\nFormFieldThemingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'form-field-theming-example',\n                template: \"<form class=\\\"example-container\\\" [formGroup]=\\\"options\\\" [style.fontSize.px]=\\\"getFontSize()\\\"><mat-form-field [color]=\\\"options.value.color\\\"><mat-select placeholder=\\\"Color\\\" formControlName=\\\"color\\\"><mat-option value=\\\"primary\\\">Primary</mat-option><mat-option value=\\\"accent\\\">Accent</mat-option><mat-option value=\\\"warn\\\">Warn</mat-option></mat-select></mat-form-field><mat-form-field [color]=\\\"options.value.color\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Font size (px)\\\" formControlName=\\\"fontSize\\\" min=\\\"10\\\"><mat-error *ngIf=\\\"options.get('fontSize')?.invalid\\\">Min size: 10px</mat-error></mat-form-field></form>\",\n                styles: [\".example-container { display: flex; flex-direction: column; } .example-container > * { width: 100%; } \"]\n            },] },\n];\n/** @nocollapse */\nFormFieldThemingExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction FormFieldThemingExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    FormFieldThemingExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    FormFieldThemingExample.ctorParameters;\n    /** @type {?} */\n    FormFieldThemingExample.prototype.options;\n}\n//# sourceMappingURL=form-field-theming-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Dynamic grid-list\n */\nexport class GridListDynamicExample {\n    constructor() {\n        this.tiles = [\n            { text: 'One', cols: 3, rows: 1, color: 'lightblue' },\n            { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\n            { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\n            { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' },\n        ];\n    }\n}\nGridListDynamicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'grid-list-dynamic-example',\n                template: \"<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\"><mat-grid-tile *ngFor=\\\"let tile of tiles\\\" [colspan]=\\\"tile.cols\\\" [rowspan]=\\\"tile.rows\\\" [style.background]=\\\"tile.color\\\">{{tile.text}}</mat-grid-tile></mat-grid-list>\",\n            },] },\n];\n/** @nocollapse */\nGridListDynamicExample.ctorParameters = () => [];\nfunction GridListDynamicExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    GridListDynamicExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    GridListDynamicExample.ctorParameters;\n    /** @type {?} */\n    GridListDynamicExample.prototype.tiles;\n}\n//# sourceMappingURL=grid-list-dynamic-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic grid-list\n */\nexport class GridListOverviewExample {\n}\nGridListOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'grid-list-overview-example',\n                styles: [\"mat-grid-tile { background: lightblue; } \"],\n                template: \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"2:1\\\"><mat-grid-tile>1</mat-grid-tile><mat-grid-tile>2</mat-grid-tile><mat-grid-tile>3</mat-grid-tile><mat-grid-tile>4</mat-grid-tile></mat-grid-list>\",\n            },] },\n];\n/** @nocollapse */\nGridListOverviewExample.ctorParameters = () => [];\nfunction GridListOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    GridListOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    GridListOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=grid-list-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic icons\n */\nexport class IconOverviewExample {\n}\nIconOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-overview-example',\n                template: \"<mat-icon>home</mat-icon>\",\n            },] },\n];\n/** @nocollapse */\nIconOverviewExample.ctorParameters = () => [];\nfunction IconOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    IconOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    IconOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=icon-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { MatIconRegistry } from \"@angular/material\";\n/**\n * \\@title SVG icons\n */\nexport class IconSvgExample {\n    /**\n     * @param {?} iconRegistry\n     * @param {?} sanitizer\n     */\n    constructor(iconRegistry, sanitizer) {\n        iconRegistry.addSvgIcon('thumbs-up', sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\n    }\n}\nIconSvgExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-svg-example',\n                template: \"<mat-icon svgIcon=\\\"thumbs-up\\\"></mat-icon>\",\n            },] },\n];\n/** @nocollapse */\nIconSvgExample.ctorParameters = () => [\n    { type: MatIconRegistry, },\n    { type: DomSanitizer, },\n];\nfunction IconSvgExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    IconSvgExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    IconSvgExample.ctorParameters;\n}\n//# sourceMappingURL=icon-svg-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Auto-resizing textarea\n */\nexport class InputAutosizeTextareaExample {\n}\nInputAutosizeTextareaExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-autosize-textarea-example',\n                template: \"<mat-form-field><textarea matInput placeholder=\\\"Autosize textarea\\\" matTextareaAutosize matAutosizeMinRows=\\\"2\\\" matAutosizeMaxRows=\\\"5\\\"></textarea></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nInputAutosizeTextareaExample.ctorParameters = () => [];\nfunction InputAutosizeTextareaExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputAutosizeTextareaExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputAutosizeTextareaExample.ctorParameters;\n}\n//# sourceMappingURL=input-autosize-textarea-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Input with a clear button\n */\nexport class InputClearableExample {\n    constructor() {\n        this.value = 'Clear me';\n    }\n}\nInputClearableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-clearable-example',\n                template: \"<mat-form-field class=\\\"example-form-field\\\"><input matInput type=\\\"text\\\" placeholder=\\\"Clearable input\\\" [(ngModel)]=\\\"value\\\"> <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\"><mat-icon>close</mat-icon></button></mat-form-field>\",\n                styles: [\".example-form-field { width: 200px; } \"],\n            },] },\n];\n/** @nocollapse */\nInputClearableExample.ctorParameters = () => [];\nfunction InputClearableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputClearableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputClearableExample.ctorParameters;\n    /** @type {?} */\n    InputClearableExample.prototype.value;\n}\n//# sourceMappingURL=input-clearable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nexport class MyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        const /** @type {?} */ isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n}\n/**\n * \\@title Input with a custom ErrorStateMatcher\n */\nexport class InputErrorStateMatcherExample {\n    constructor() {\n        this.emailFormControl = new FormControl('', [\n            Validators.required,\n            Validators.email,\n        ]);\n        this.matcher = new MyErrorStateMatcher();\n    }\n}\nInputErrorStateMatcherExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-error-state-matcher-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\"><mat-hint>Errors appear instantly!</mat-hint><mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">Please enter a valid email address</mat-error><mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">Email is <strong>required</strong></mat-error></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/** @nocollapse */\nInputErrorStateMatcherExample.ctorParameters = () => [];\nfunction InputErrorStateMatcherExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputErrorStateMatcherExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputErrorStateMatcherExample.ctorParameters;\n    /** @type {?} */\n    InputErrorStateMatcherExample.prototype.emailFormControl;\n    /** @type {?} */\n    InputErrorStateMatcherExample.prototype.matcher;\n}\n//# sourceMappingURL=input-error-state-matcher-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\n/**\n * \\@title Input with error messages\n */\nexport class InputErrorsExample {\n    constructor() {\n        this.emailFormControl = new FormControl('', [\n            Validators.required,\n            Validators.email,\n        ]);\n    }\n}\nInputErrorsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-errors-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"><mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">Please enter a valid email address</mat-error><mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">Email is <strong>required</strong></mat-error></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/** @nocollapse */\nInputErrorsExample.ctorParameters = () => [];\nfunction InputErrorsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputErrorsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputErrorsExample.ctorParameters;\n    /** @type {?} */\n    InputErrorsExample.prototype.emailFormControl;\n}\n//# sourceMappingURL=input-errors-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Inputs in a form\n */\nexport class InputFormExample {\n}\nInputFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-form-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Company (disabled)\\\" disabled=\\\"disabled\\\" value=\\\"Google\\\"></mat-form-field><table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"First name\\\"></mat-form-field></td><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Long Last Name That Will Be Truncated\\\"></mat-form-field></td></tr></table><p><mat-form-field class=\\\"example-full-width\\\"><textarea matInput placeholder=\\\"Address\\\">1600 Amphitheatre Pkwy</textarea></mat-form-field><mat-form-field class=\\\"example-full-width\\\"><textarea matInput placeholder=\\\"Address 2\\\"></textarea></mat-form-field></p><table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"City\\\"></mat-form-field></td><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"State\\\"></mat-form-field></td><td><mat-form-field class=\\\"example-full-width\\\"><input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" value=\\\"94043\\\"><mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint></mat-form-field></td></tr></table></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/** @nocollapse */\nInputFormExample.ctorParameters = () => [];\nfunction InputFormExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputFormExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputFormExample.ctorParameters;\n}\n//# sourceMappingURL=input-form-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Input with hints\n */\nexport class InputHintExample {\n}\nInputHintExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-hint-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput #message maxlength=\\\"256\\\" placeholder=\\\"Message\\\"><mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong></mat-hint><mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/** @nocollapse */\nInputHintExample.ctorParameters = () => [];\nfunction InputHintExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputHintExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputHintExample.ctorParameters;\n}\n//# sourceMappingURL=input-hint-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic Inputs\n */\nexport class InputOverviewExample {\n}\nInputOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-overview-example',\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Favorite food\\\" value=\\\"Sushi\\\"></mat-form-field><mat-form-field class=\\\"example-full-width\\\"><textarea matInput placeholder=\\\"Leave a comment\\\"></textarea></mat-form-field></form>\",\n            },] },\n];\n/** @nocollapse */\nInputOverviewExample.ctorParameters = () => [];\nfunction InputOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=input-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Inputs with prefixes and suffixes\n */\nexport class InputPrefixSuffixExample {\n}\nInputPrefixSuffixExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-prefix-suffix-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><span matPrefix>+1 &nbsp;</span> <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\"><mat-icon matSuffix>mode_edit</mat-icon></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/** @nocollapse */\nInputPrefixSuffixExample.ctorParameters = () => [];\nfunction InputPrefixSuffixExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    InputPrefixSuffixExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    InputPrefixSuffixExample.ctorParameters;\n}\n//# sourceMappingURL=input-prefix-suffix-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic list\n */\nexport class ListOverviewExample {\n}\nListOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'list-overview-example',\n                template: \"<mat-list role=\\\"list\\\"><mat-list-item role=\\\"listitem\\\">Item 1</mat-list-item><mat-list-item role=\\\"listitem\\\">Item 2</mat-list-item><mat-list-item role=\\\"listitem\\\">Item 3</mat-list-item></mat-list>\",\n            },] },\n];\n/** @nocollapse */\nListOverviewExample.ctorParameters = () => [];\nfunction ListOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ListOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ListOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=list-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title List with sections\n */\nexport class ListSectionsExample {\n    constructor() {\n        this.folders = [\n            {\n                name: 'Photos',\n                updated: new Date('1/1/16'),\n            },\n            {\n                name: 'Recipes',\n                updated: new Date('1/17/16'),\n            },\n            {\n                name: 'Work',\n                updated: new Date('1/28/16'),\n            }\n        ];\n        this.notes = [\n            {\n                name: 'Vacation Itinerary',\n                updated: new Date('2/20/16'),\n            },\n            {\n                name: 'Kitchen Remodel',\n                updated: new Date('1/18/16'),\n            }\n        ];\n    }\n}\nListSectionsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'list-sections-example',\n                styles: [\".mat-list-icon { color: rgba(0, 0, 0, 0.54); } \"],\n                template: \"<mat-list><h3 mat-subheader>Folders</h3><mat-list-item *ngFor=\\\"let folder of folders\\\"><mat-icon mat-list-icon>folder</mat-icon><h4 mat-line>{{folder.name}}</h4><p mat-line>{{folder.updated | date}}</p></mat-list-item><mat-divider></mat-divider><h3 mat-subheader>Notes</h3><mat-list-item *ngFor=\\\"let note of notes\\\"><mat-icon mat-list-icon>note</mat-icon><h4 mat-line>{{note.name}}</h4><p mat-line>{{note.updated | date}}</p></mat-list-item></mat-list>\",\n            },] },\n];\n/** @nocollapse */\nListSectionsExample.ctorParameters = () => [];\nfunction ListSectionsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ListSectionsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ListSectionsExample.ctorParameters;\n    /** @type {?} */\n    ListSectionsExample.prototype.folders;\n    /** @type {?} */\n    ListSectionsExample.prototype.notes;\n}\n//# sourceMappingURL=list-sections-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title List with selection\n */\nexport class ListSelectionExample {\n    constructor() {\n        this.typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\n    }\n}\nListSelectionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'list-selection-example',\n                styles: [\"/** No styles for this example. */ \"],\n                template: \"<mat-selection-list #shoes><mat-list-option *ngFor=\\\"let shoe of typesOfShoes\\\">{{shoe}}</mat-list-option></mat-selection-list><p>Options selected: {{shoes.selectedOptions.selected.length}}</p>\",\n            },] },\n];\n/** @nocollapse */\nListSelectionExample.ctorParameters = () => [];\nfunction ListSelectionExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ListSelectionExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ListSelectionExample.ctorParameters;\n    /** @type {?} */\n    ListSelectionExample.prototype.typesOfShoes;\n}\n//# sourceMappingURL=list-selection-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Menu with icons\n */\nexport class MenuIconsExample {\n}\nMenuIconsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'menu-icons-example',\n                template: \"<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>more_vert</mat-icon></button><mat-menu #menu=\\\"matMenu\\\"><button mat-menu-item><mat-icon>dialpad</mat-icon><span>Redial</span></button> <button mat-menu-item disabled=\\\"disabled\\\"><mat-icon>voicemail</mat-icon><span>Check voicemail</span></button> <button mat-menu-item><mat-icon>notifications_off</mat-icon><span>Disable alerts</span></button></mat-menu>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nMenuIconsExample.ctorParameters = () => [];\nfunction MenuIconsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MenuIconsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MenuIconsExample.ctorParameters;\n}\n//# sourceMappingURL=menu-icons-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic menu\n */\nexport class MenuOverviewExample {\n}\nMenuOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'menu-overview-example',\n                template: \"<button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button><mat-menu #menu=\\\"matMenu\\\"><button mat-menu-item>Item 1</button> <button mat-menu-item>Item 2</button></mat-menu>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nMenuOverviewExample.ctorParameters = () => [];\nfunction MenuOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MenuOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MenuOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=menu-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Nested menu\n */\nexport class NestedMenuExample {\n}\nNestedMenuExample.decorators = [\n    { type: Component, args: [{\n                selector: 'nested-menu-example',\n                template: \"<button mat-button [matMenuTriggerFor]=\\\"animals\\\">Animal index</button><mat-menu #animals=\\\"matMenu\\\"><button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button> <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button></mat-menu><mat-menu #vertebrates=\\\"matMenu\\\"><button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button> <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button> <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button> <button mat-menu-item>Birds</button> <button mat-menu-item>Mammals</button></mat-menu><mat-menu #invertebrates=\\\"matMenu\\\"><button mat-menu-item>Insects</button> <button mat-menu-item>Molluscs</button> <button mat-menu-item>Crustaceans</button> <button mat-menu-item>Corals</button> <button mat-menu-item>Arachnids</button> <button mat-menu-item>Velvet worms</button> <button mat-menu-item>Horseshoe crabs</button></mat-menu><mat-menu #fish=\\\"matMenu\\\"><button mat-menu-item>Baikal oilfish</button> <button mat-menu-item>Bala shark</button> <button mat-menu-item>Ballan wrasse</button> <button mat-menu-item>Bamboo shark</button> <button mat-menu-item>Banded killifish</button></mat-menu><mat-menu #amphibians=\\\"matMenu\\\"><button mat-menu-item>Sonoran desert toad</button> <button mat-menu-item>Western toad</button> <button mat-menu-item>Arroyo toad</button> <button mat-menu-item>Yosemite toad</button></mat-menu><mat-menu #reptiles=\\\"matMenu\\\"><button mat-menu-item>Banded Day Gecko</button> <button mat-menu-item>Banded Gila Monster</button> <button mat-menu-item>Black Tree Monitor</button> <button mat-menu-item>Blue Spiny Lizard</button> <button mat-menu-item disabled=\\\"disabled\\\">Velociraptor</button></mat-menu>\",\n                styles: [\"/** No CSS for this example */ \"]\n            },] },\n];\n/** @nocollapse */\nNestedMenuExample.ctorParameters = () => [];\nfunction NestedMenuExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NestedMenuExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NestedMenuExample.ctorParameters;\n}\n//# sourceMappingURL=nested-menu-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Configurable paginator\n */\nexport class PaginatorConfigurableExample {\n    constructor() {\n        // MatPaginator Inputs\n        this.length = 100;\n        this.pageSize = 10;\n        this.pageSizeOptions = [5, 10, 25, 100];\n    }\n    /**\n     * @param {?} setPageSizeOptionsInput\n     * @return {?}\n     */\n    setPageSizeOptions(setPageSizeOptionsInput) {\n        this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n}\nPaginatorConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'paginator-configurable-example',\n                template: \"<mat-form-field>List length: <input matInput [(ngModel)]=\\\"length\\\"></mat-form-field><mat-form-field>Page size: <input matInput [(ngModel)]=\\\"pageSize\\\"></mat-form-field><mat-form-field>Page size options: <input matInput [ngModel]=\\\"pageSizeOptions\\\" (ngModelChange)=\\\"setPageSizeOptions($event)\\\"></mat-form-field><mat-paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvent = $event\\\"></mat-paginator><div *ngIf=\\\"pageEvent\\\"><h5>Page Change Event Properties</h5><div>List length: {{pageEvent.length}}</div><div>Page size: {{pageEvent.pageSize}}</div><div>Page index: {{pageEvent.pageIndex}}</div></div>\",\n            },] },\n];\n/** @nocollapse */\nPaginatorConfigurableExample.ctorParameters = () => [];\nfunction PaginatorConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    PaginatorConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    PaginatorConfigurableExample.ctorParameters;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.length;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.pageSize;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.pageSizeOptions;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.pageEvent;\n}\n//# sourceMappingURL=paginator-configurable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Paginator\n */\nexport class PaginatorOverviewExample {\n}\nPaginatorOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'paginator-overview-example',\n                template: \"<mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\",\n            },] },\n];\n/** @nocollapse */\nPaginatorOverviewExample.ctorParameters = () => [];\nfunction PaginatorOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    PaginatorOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    PaginatorOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=paginator-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Buffer progress-bar\n */\nexport class ProgressBarBufferExample {\n}\nProgressBarBufferExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-buffer-example',\n                template: \"<mat-progress-bar mode=\\\"buffer\\\"></mat-progress-bar>\",\n            },] },\n];\n/** @nocollapse */\nProgressBarBufferExample.ctorParameters = () => [];\nfunction ProgressBarBufferExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressBarBufferExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressBarBufferExample.ctorParameters;\n}\n//# sourceMappingURL=progress-bar-buffer-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Configurable progress-bar\n */\nexport class ProgressBarConfigurableExample {\n    constructor() {\n        this.color = 'primary';\n        this.mode = 'determinate';\n        this.value = 50;\n        this.bufferValue = 75;\n    }\n}\nProgressBarConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Progress bar configuration</h2><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Color:</label><mat-radio-group [(ngModel)]=\\\"color\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">Primary</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">Accent</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">Warn</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Mode:</label><mat-radio-group [(ngModel)]=\\\"mode\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">Determinate</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">Indeterminate</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"buffer\\\">Buffer</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"query\\\">Query</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate' || mode == 'buffer'\\\"><label class=\\\"example-margin\\\">Progress:</label><mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider></section><section class=\\\"example-section\\\" *ngIf=\\\"mode == 'buffer'\\\"><label class=\\\"example-margin\\\">Buffer:</label><mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"bufferValue\\\"></mat-slider></section></mat-card-content></mat-card><mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><section class=\\\"example-section\\\"><mat-progress-bar class=\\\"example-margin\\\" [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\" [bufferValue]=\\\"bufferValue\\\"></mat-progress-bar></section></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 0 10px; } \"],\n            },] },\n];\n/** @nocollapse */\nProgressBarConfigurableExample.ctorParameters = () => [];\nfunction ProgressBarConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressBarConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressBarConfigurableExample.ctorParameters;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.color;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.mode;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.value;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.bufferValue;\n}\n//# sourceMappingURL=progress-bar-configurable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Determinate progress-bar\n */\nexport class ProgressBarDeterminateExample {\n}\nProgressBarDeterminateExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-determinate-example',\n                template: \"<mat-progress-bar mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar>\",\n            },] },\n];\n/** @nocollapse */\nProgressBarDeterminateExample.ctorParameters = () => [];\nfunction ProgressBarDeterminateExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressBarDeterminateExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressBarDeterminateExample.ctorParameters;\n}\n//# sourceMappingURL=progress-bar-determinate-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Indeterminate progress-bar\n */\nexport class ProgressBarIndeterminateExample {\n}\nProgressBarIndeterminateExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-indeterminate-example',\n                template: \"<mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\",\n            },] },\n];\n/** @nocollapse */\nProgressBarIndeterminateExample.ctorParameters = () => [];\nfunction ProgressBarIndeterminateExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressBarIndeterminateExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressBarIndeterminateExample.ctorParameters;\n}\n//# sourceMappingURL=progress-bar-indeterminate-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Query progress-bar\n */\nexport class ProgressBarQueryExample {\n}\nProgressBarQueryExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-query-example',\n                template: \"<mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\",\n            },] },\n];\n/** @nocollapse */\nProgressBarQueryExample.ctorParameters = () => [];\nfunction ProgressBarQueryExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressBarQueryExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressBarQueryExample.ctorParameters;\n}\n//# sourceMappingURL=progress-bar-query-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Configurable progress spinner\n */\nexport class ProgressSpinnerConfigurableExample {\n    constructor() {\n        this.color = 'primary';\n        this.mode = 'determinate';\n        this.value = 50;\n    }\n}\nProgressSpinnerConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-spinner-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Progress spinner configuration</h2><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Color:</label><mat-radio-group [(ngModel)]=\\\"color\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">Primary</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">Accent</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">Warn</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Mode:</label><mat-radio-group [(ngModel)]=\\\"mode\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">Determinate</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">Indeterminate</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate'\\\"><label class=\\\"example-margin\\\">Progress:</label><mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider></section></mat-card-content></mat-card><mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><mat-progress-spinner class=\\\"example-margin\\\" [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\"></mat-progress-spinner></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 0 10px; } \"],\n            },] },\n];\n/** @nocollapse */\nProgressSpinnerConfigurableExample.ctorParameters = () => [];\nfunction ProgressSpinnerConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressSpinnerConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressSpinnerConfigurableExample.ctorParameters;\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.prototype.color;\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.prototype.mode;\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.prototype.value;\n}\n//# sourceMappingURL=progress-spinner-configurable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic progress-spinner\n */\nexport class ProgressSpinnerOverviewExample {\n}\nProgressSpinnerOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-spinner-overview-example',\n                template: \"<mat-spinner></mat-spinner>\",\n            },] },\n];\n/** @nocollapse */\nProgressSpinnerOverviewExample.ctorParameters = () => [];\nfunction ProgressSpinnerOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ProgressSpinnerOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ProgressSpinnerOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=progress-spinner-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Radios with ngModel\n */\nexport class RadioNgModelExample {\n    constructor() {\n        this.seasons = [\n            'Winter',\n            'Spring',\n            'Summer',\n            'Autumn',\n        ];\n    }\n}\nRadioNgModelExample.decorators = [\n    { type: Component, args: [{\n                selector: 'radio-ng-model-example',\n                template: \"<mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"favoriteSeason\\\"><mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let season of seasons\\\" [value]=\\\"season\\\">{{season}}</mat-radio-button></mat-radio-group><div class=\\\"example-selected-value\\\">Your favorite season is: {{favoriteSeason}}</div>\",\n                styles: [\".example-radio-group { display: inline-flex; flex-direction: column; } .example-radio-button { margin: 5px; } .example-selected-value { margin: 15px 0; } \"],\n            },] },\n];\n/** @nocollapse */\nRadioNgModelExample.ctorParameters = () => [];\nfunction RadioNgModelExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    RadioNgModelExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    RadioNgModelExample.ctorParameters;\n    /** @type {?} */\n    RadioNgModelExample.prototype.favoriteSeason;\n    /** @type {?} */\n    RadioNgModelExample.prototype.seasons;\n}\n//# sourceMappingURL=radio-ng-model-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic radios\n */\nexport class RadioOverviewExample {\n}\nRadioOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'radio-overview-example',\n                template: \"<mat-radio-group><mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button><mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button></mat-radio-group>\",\n                styles: [\".mat-radio-button ~ .mat-radio-button { padding-right: 16px; } \"],\n            },] },\n];\n/** @nocollapse */\nRadioOverviewExample.ctorParameters = () => [];\nfunction RadioOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    RadioOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    RadioOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=radio-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Select with custom trigger text\n */\nexport class SelectCustomTriggerExample {\n    constructor() {\n        this.toppings = new FormControl();\n        this.toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n    }\n}\nSelectCustomTriggerExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-custom-trigger-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple=\\\"multiple\\\"><mat-select-trigger>{{toppings.value ? toppings.value[0] : ''}} <span *ngIf=\\\"toppings.value?.length > 1\\\" class=\\\"example-additional-selection\\\">(+{{toppings.value.length - 1}} others)</span></mat-select-trigger><mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option></mat-select></mat-form-field>\",\n                styles: [\".example-additional-selection { opacity: 0.75; font-size: 0.75em; } \"],\n            },] },\n];\n/** @nocollapse */\nSelectCustomTriggerExample.ctorParameters = () => [];\nfunction SelectCustomTriggerExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectCustomTriggerExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectCustomTriggerExample.ctorParameters;\n    /** @type {?} */\n    SelectCustomTriggerExample.prototype.toppings;\n    /** @type {?} */\n    SelectCustomTriggerExample.prototype.toppingList;\n}\n//# sourceMappingURL=select-custom-trigger-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Disabled select\n */\nexport class SelectDisabledExample {\n    constructor() {\n        this.disableSelect = new FormControl(false);\n    }\n}\nSelectDisabledExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-disabled-example',\n                template: \"<p><mat-checkbox [formControl]=\\\"disableSelect\\\">Disable select</mat-checkbox></p><p><mat-form-field><mat-select placeholder=\\\"Choose an option\\\" [disabled]=\\\"disableSelect.value\\\"><mat-option value=\\\"option1\\\">Option 1</mat-option><mat-option value=\\\"option2\\\" disabled=\\\"disabled\\\">Option 2 (disabled)</mat-option><mat-option value=\\\"option3\\\">Option 3</mat-option></mat-select></mat-form-field></p>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectDisabledExample.ctorParameters = () => [];\nfunction SelectDisabledExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectDisabledExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectDisabledExample.ctorParameters;\n    /** @type {?} */\n    SelectDisabledExample.prototype.disableSelect;\n}\n//# sourceMappingURL=select-disabled-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\n/**\n * Error when invalid control is dirty, touched, or submitted.\n */\nexport class MyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        const /** @type {?} */ isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n}\n/**\n * \\@title Select with a custom ErrorStateMatcher\n */\nexport class SelectErrorStateMatcherExample {\n    constructor() {\n        this.selected = new FormControl('valid', [\n            Validators.required,\n            Validators.pattern('valid'),\n        ]);\n        this.matcher = new MyErrorStateMatcher();\n    }\n}\nSelectErrorStateMatcherExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-error-state-matcher-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Choose one\\\" [formControl]=\\\"selected\\\" [errorStateMatcher]=\\\"matcher\\\"><mat-option>Clear</mat-option><mat-option value=\\\"valid\\\">Valid option</mat-option><mat-option value=\\\"invalid\\\">Invalid option</mat-option></mat-select><mat-hint>Errors appear instantly!</mat-hint><mat-error *ngIf=\\\"selected.hasError('required')\\\">You must make a selection</mat-error><mat-error *ngIf=\\\"selected.hasError('pattern') && !selected.hasError('required')\\\">Your selection is invalid</mat-error></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectErrorStateMatcherExample.ctorParameters = () => [];\nfunction SelectErrorStateMatcherExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectErrorStateMatcherExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectErrorStateMatcherExample.ctorParameters;\n    /** @type {?} */\n    SelectErrorStateMatcherExample.prototype.selected;\n    /** @type {?} */\n    SelectErrorStateMatcherExample.prototype.matcher;\n}\n//# sourceMappingURL=select-error-state-matcher-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Select in a form\n */\nexport class SelectFormExample {\n    constructor() {\n        this.foods = [\n            { value: 'steak-0', viewValue: 'Steak' },\n            { value: 'pizza-1', viewValue: 'Pizza' },\n            { value: 'tacos-2', viewValue: 'Tacos' }\n        ];\n    }\n}\nSelectFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-form-example',\n                template: \"<form><mat-form-field><mat-select placeholder=\\\"Favorite food\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"food\\\"><mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">{{food.viewValue}}</mat-option></mat-select></mat-form-field><p>Selected value: {{selectedValue}}</p></form>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectFormExample.ctorParameters = () => [];\nfunction SelectFormExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectFormExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectFormExample.ctorParameters;\n    /** @type {?} */\n    SelectFormExample.prototype.selectedValue;\n    /** @type {?} */\n    SelectFormExample.prototype.foods;\n}\n//# sourceMappingURL=select-form-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\n/**\n * \\@title Select with form field features\n */\nexport class SelectHintErrorExample {\n    constructor() {\n        this.animalControl = new FormControl('', [Validators.required]);\n        this.animals = [\n            { name: 'Dog', sound: 'Woof!' },\n            { name: 'Cat', sound: 'Meow!' },\n            { name: 'Cow', sound: 'Moo!' },\n            { name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!' },\n        ];\n    }\n}\nSelectHintErrorExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-hint-error-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Favorite animal\\\" [formControl]=\\\"animalControl\\\" required><mat-option>--</mat-option><mat-option *ngFor=\\\"let animal of animals\\\" [value]=\\\"animal\\\">{{animal.name}}</mat-option></mat-select><mat-error *ngIf=\\\"animalControl.hasError('required')\\\">Please choose an animal</mat-error><mat-hint>{{animalControl.value?.sound}}</mat-hint></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectHintErrorExample.ctorParameters = () => [];\nfunction SelectHintErrorExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectHintErrorExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectHintErrorExample.ctorParameters;\n    /** @type {?} */\n    SelectHintErrorExample.prototype.animalControl;\n    /** @type {?} */\n    SelectHintErrorExample.prototype.animals;\n}\n//# sourceMappingURL=select-hint-error-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Select with multiple selection\n */\nexport class SelectMultipleExample {\n    constructor() {\n        this.toppings = new FormControl();\n        this.toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n    }\n}\nSelectMultipleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-multiple-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Toppings\\\" [formControl]=\\\"toppings\\\" multiple=\\\"multiple\\\"><mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option></mat-select></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectMultipleExample.ctorParameters = () => [];\nfunction SelectMultipleExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectMultipleExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectMultipleExample.ctorParameters;\n    /** @type {?} */\n    SelectMultipleExample.prototype.toppings;\n    /** @type {?} */\n    SelectMultipleExample.prototype.toppingList;\n}\n//# sourceMappingURL=select-multiple-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Select with no option ripple\n */\nexport class SelectNoRippleExample {\n}\nSelectNoRippleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-no-ripple-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Select an option\\\" disableRipple><mat-option value=\\\"1\\\">Option 1</mat-option><mat-option value=\\\"2\\\">Option 2</mat-option><mat-option value=\\\"3\\\">Option 3</mat-option></mat-select></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectNoRippleExample.ctorParameters = () => [];\nfunction SelectNoRippleExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectNoRippleExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectNoRippleExample.ctorParameters;\n}\n//# sourceMappingURL=select-no-ripple-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Select with option groups\n */\nexport class SelectOptgroupExample {\n    constructor() {\n        this.pokemonControl = new FormControl();\n        this.pokemonGroups = [\n            {\n                name: 'Grass',\n                pokemon: [\n                    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n                    { value: 'oddish-1', viewValue: 'Oddish' },\n                    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n                ]\n            },\n            {\n                name: 'Water',\n                pokemon: [\n                    { value: 'squirtle-3', viewValue: 'Squirtle' },\n                    { value: 'psyduck-4', viewValue: 'Psyduck' },\n                    { value: 'horsea-5', viewValue: 'Horsea' }\n                ]\n            },\n            {\n                name: 'Fire',\n                disabled: true,\n                pokemon: [\n                    { value: 'charmander-6', viewValue: 'Charmander' },\n                    { value: 'vulpix-7', viewValue: 'Vulpix' },\n                    { value: 'flareon-8', viewValue: 'Flareon' }\n                ]\n            },\n            {\n                name: 'Psychic',\n                pokemon: [\n                    { value: 'mew-9', viewValue: 'Mew' },\n                    { value: 'mewtwo-10', viewValue: 'Mewtwo' },\n                ]\n            }\n        ];\n    }\n}\nSelectOptgroupExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-optgroup-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Pokemon\\\" [formControl]=\\\"pokemonControl\\\"><mat-option>-- None --</mat-option><mat-optgroup *ngFor=\\\"let group of pokemonGroups\\\" [label]=\\\"group.name\\\" [disabled]=\\\"group.disabled\\\"><mat-option *ngFor=\\\"let pokemon of group.pokemon\\\" [value]=\\\"pokemon.value\\\">{{ pokemon.viewValue }}</mat-option></mat-optgroup></mat-select></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectOptgroupExample.ctorParameters = () => [];\nfunction SelectOptgroupExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectOptgroupExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectOptgroupExample.ctorParameters;\n    /** @type {?} */\n    SelectOptgroupExample.prototype.pokemonControl;\n    /** @type {?} */\n    SelectOptgroupExample.prototype.pokemonGroups;\n}\n//# sourceMappingURL=select-optgroup-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic select\n */\nexport class SelectOverviewExample {\n    constructor() {\n        this.foods = [\n            { value: 'steak-0', viewValue: 'Steak' },\n            { value: 'pizza-1', viewValue: 'Pizza' },\n            { value: 'tacos-2', viewValue: 'Tacos' }\n        ];\n    }\n}\nSelectOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-overview-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Favorite food\\\"><mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">{{ food.viewValue }}</mat-option></mat-select></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectOverviewExample.ctorParameters = () => [];\nfunction SelectOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectOverviewExample.ctorParameters;\n    /** @type {?} */\n    SelectOverviewExample.prototype.foods;\n}\n//# sourceMappingURL=select-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewEncapsulation } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Select with custom panel styling\n */\nexport class SelectPanelClassExample {\n    constructor() {\n        this.panelColor = new FormControl('red');\n    }\n}\nSelectPanelClassExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-panel-class-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Panel color\\\" [formControl]=\\\"panelColor\\\" panelClass=\\\"example-panel-{{panelColor.value}}\\\"><mat-option value=\\\"red\\\">Red</mat-option><mat-option value=\\\"green\\\">Green</mat-option><mat-option value=\\\"blue\\\">Blue</mat-option></mat-select></mat-form-field>\",\n                styles: [\".example-panel-red .mat-select-content { background: rgba(255, 0, 0, 0.5); } .example-panel-green .mat-select-content { background: rgba(0, 255, 0, 0.5); } .example-panel-blue .mat-select-content { background: rgba(0, 0, 255, 0.5); } \"],\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/** @nocollapse */\nSelectPanelClassExample.ctorParameters = () => [];\nfunction SelectPanelClassExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectPanelClassExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectPanelClassExample.ctorParameters;\n    /** @type {?} */\n    SelectPanelClassExample.prototype.panelColor;\n}\n//# sourceMappingURL=select-panel-class-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Select with reset option\n */\nexport class SelectResetExample {\n    constructor() {\n        this.states = [\n            'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n            'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n            'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n            'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n            'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n            'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n            'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n        ];\n    }\n}\nSelectResetExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-reset-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"State\\\"><mat-option>None</mat-option><mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option></mat-select></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectResetExample.ctorParameters = () => [];\nfunction SelectResetExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectResetExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectResetExample.ctorParameters;\n    /** @type {?} */\n    SelectResetExample.prototype.states;\n}\n//# sourceMappingURL=select-reset-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Select with 2-way value binding\n */\nexport class SelectValueBindingExample {\n    constructor() {\n        this.selected = 'option2';\n    }\n}\nSelectValueBindingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-value-binding-example',\n                template: \"<mat-form-field><mat-select [(value)]=\\\"selected\\\"><mat-option>None</mat-option><mat-option value=\\\"option1\\\">Option 1</mat-option><mat-option value=\\\"option2\\\">Option 2</mat-option><mat-option value=\\\"option3\\\">Option 3</mat-option></mat-select></mat-form-field><p>You selected: {{selected}}</p>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/** @nocollapse */\nSelectValueBindingExample.ctorParameters = () => [];\nfunction SelectValueBindingExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SelectValueBindingExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SelectValueBindingExample.ctorParameters;\n    /** @type {?} */\n    SelectValueBindingExample.prototype.selected;\n}\n//# sourceMappingURL=select-value-binding-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Autosize sidenav\n */\nexport class SidenavAutosizeExample {\n    constructor() {\n        this.showFiller = false;\n    }\n}\nSidenavAutosizeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-autosize-example',\n                template: \"<mat-drawer-container class=\\\"example-container\\\" autosize><mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\"><p>Auto-resizing sidenav</p><p *ngIf=\\\"showFiller\\\">Lorem, ipsum dolor sit amet consectetur.</p><button (click)=\\\"showFiller = !showFiller\\\" mat-raised-button>Toggle extra text</button></mat-drawer><div class=\\\"example-sidenav-content\\\"><button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">Toggle sidenav</button></div></mat-drawer-container>\",\n                styles: [\".example-container { width: 500px; height: 300px; border: 1px solid rgba(0, 0, 0, 0.5); } .example-sidenav-content { display: flex; height: 100%; align-items: center; justify-content: center; } .example-sidenav { padding: 20px; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavAutosizeExample.ctorParameters = () => [];\nfunction SidenavAutosizeExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavAutosizeExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavAutosizeExample.ctorParameters;\n    /** @type {?} */\n    SidenavAutosizeExample.prototype.showFiller;\n}\n//# sourceMappingURL=sidenav-autosize-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatSidenav } from \"@angular/material/sidenav\";\n/**\n * \\@title Sidenav with custom escape and backdrop click behavior\n */\nexport class SidenavDisableCloseExample {\n    constructor() {\n        this.reason = '';\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    close(reason) {\n        this.reason = reason;\n        this.sidenav.close();\n    }\n}\nSidenavDisableCloseExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-disable-close-example',\n                template: \"<mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\" *ngIf=\\\"shouldRun\\\"><mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose><p><button mat-button (click)=\\\"close('toggle button')\\\">Toggle</button></p></mat-sidenav><mat-sidenav-content><p><button mat-button (click)=\\\"sidenav.open()\\\">Open</button></p><p>Closed due to: {{reason}}</p></mat-sidenav-content></mat-sidenav-container><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { position: absolute; top: 0; bottom: 0; left: 0; right: 0; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavDisableCloseExample.ctorParameters = () => [];\nSidenavDisableCloseExample.propDecorators = {\n    \"sidenav\": [{ type: ViewChild, args: ['sidenav',] },],\n};\nfunction SidenavDisableCloseExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavDisableCloseExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavDisableCloseExample.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    SidenavDisableCloseExample.propDecorators;\n    /** @type {?} */\n    SidenavDisableCloseExample.prototype.sidenav;\n    /** @type {?} */\n    SidenavDisableCloseExample.prototype.reason;\n    /** @type {?} */\n    SidenavDisableCloseExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-disable-close-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic drawer\n */\nexport class SidenavDrawerOverviewExample {\n}\nSidenavDrawerOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-drawer-overview-example',\n                template: \"<mat-drawer-container class=\\\"example-container\\\"><mat-drawer mode=\\\"side\\\" opened=\\\"true\\\">Drawer content</mat-drawer><mat-drawer-content>Main content</mat-drawer-content></mat-drawer-container>\",\n                styles: [\".example-container { width: 400px; height: 200px; margin: 10px; border: 1px solid #555; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavDrawerOverviewExample.ctorParameters = () => [];\nfunction SidenavDrawerOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavDrawerOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavDrawerOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=sidenav-drawer-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n/**\n * \\@title Fixed sidenav\n */\nexport class SidenavFixedExample {\n    /**\n     * @param {?} fb\n     */\n    constructor(fb) {\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n        this.options = fb.group({\n            'fixed': false,\n            'top': 0,\n            'bottom': 0,\n        });\n    }\n}\nSidenavFixedExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-fixed-example',\n                template: \"<ng-container *ngIf=\\\"shouldRun\\\"><mat-toolbar class=\\\"example-header\\\">Header</mat-toolbar><mat-sidenav-container class=\\\"example-container\\\"><mat-sidenav #sidenav mode=\\\"side\\\" opened=\\\"true\\\" class=\\\"example-sidenav\\\" [fixedInViewport]=\\\"options.value.fixed\\\" [fixedTopGap]=\\\"options.value.top\\\" [fixedBottomGap]=\\\"options.value.bottom\\\">{{options.value.fixed ? 'Fixed' : 'Non-fixed'}} Sidenav</mat-sidenav><mat-sidenav-content [formGroup]=\\\"options\\\"><p><mat-checkbox formControlName=\\\"fixed\\\">Fixed</mat-checkbox></p><p><mat-form-field><input matInput type=\\\"number\\\" formControlName=\\\"top\\\" placeholder=\\\"Top gap\\\"></mat-form-field></p><p><mat-form-field><input matInput type=\\\"number\\\" formControlName=\\\"bottom\\\" placeholder=\\\"Bottom gap\\\"></mat-form-field></p><p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p></mat-sidenav-content></mat-sidenav-container><mat-toolbar class=\\\"example-footer\\\">Footer</mat-toolbar></ng-container><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { position: absolute; top: 60px; bottom: 60px; left: 0; right: 0; } .example-sidenav { display: flex; align-items: center; justify-content: center; width: 200px; background: rgba(255, 0, 0, 0.5); } .example-header { position: fixed; top: 0; left: 0; right: 0; } .example-footer { position: fixed; bottom: 0; left: 0; right: 0; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavFixedExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction SidenavFixedExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavFixedExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavFixedExample.ctorParameters;\n    /** @type {?} */\n    SidenavFixedExample.prototype.options;\n    /** @type {?} */\n    SidenavFixedExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-fixed-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n/**\n * \\@title Sidenav with configurable mode\n */\nexport class SidenavModeExample {\n    constructor() {\n        this.mode = new FormControl('over');\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n    }\n}\nSidenavModeExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-mode-example',\n                template: \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\"><mat-sidenav #sidenav [mode]=\\\"mode.value\\\"><p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p><p><mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\"><label>Mode:</label><mat-radio-button value=\\\"over\\\">Over</mat-radio-button><mat-radio-button value=\\\"side\\\">Side</mat-radio-button><mat-radio-button value=\\\"push\\\">Push</mat-radio-button></mat-radio-group></p></mat-sidenav><mat-sidenav-content><p><button mat-button (click)=\\\"sidenav.toggle()\\\">Toggle</button></p><p><mat-radio-group class=\\\"example-radio-group\\\" [formControl]=\\\"mode\\\"><label>Mode:</label><mat-radio-button value=\\\"over\\\">Over</mat-radio-button><mat-radio-button value=\\\"side\\\">Side</mat-radio-button><mat-radio-button value=\\\"push\\\">Push</mat-radio-button></mat-radio-group></p></mat-sidenav-content></mat-sidenav-container><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { position: absolute; top: 0; bottom: 0; left: 0; right: 0; } .example-radio-group { display: block; border: 1px solid #555; margin: 20px; padding: 10px; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavModeExample.ctorParameters = () => [];\nfunction SidenavModeExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavModeExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavModeExample.ctorParameters;\n    /** @type {?} */\n    SidenavModeExample.prototype.mode;\n    /** @type {?} */\n    SidenavModeExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-mode-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Sidenav open & close behavior\n */\nexport class SidenavOpenCloseExample {\n    constructor() {\n        this.events = [];\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n    }\n}\nSidenavOpenCloseExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-open-close-example',\n                template: \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\"><mat-sidenav #sidenav mode=\\\"side\\\" [(opened)]=\\\"opened\\\" (opened)=\\\"events.push('open!')\\\" (closed)=\\\"events.push('close!')\\\">Sidenav content</mat-sidenav><mat-sidenav-content><p><mat-checkbox [(ngModel)]=\\\"opened\\\">sidenav.opened</mat-checkbox></p><p><button mat-button (click)=\\\"sidenav.toggle()\\\">sidenav.toggle()</button></p><p>Events:</p><div class=\\\"example-events\\\"><div *ngFor=\\\"let e of events\\\">{{e}}</div></div></mat-sidenav-content></mat-sidenav-container><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { position: absolute; top: 0; bottom: 0; left: 0; right: 0; } .example-events { width: 300px; height: 200px; overflow: auto; border: 1px solid #555; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavOpenCloseExample.ctorParameters = () => [];\nfunction SidenavOpenCloseExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavOpenCloseExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavOpenCloseExample.ctorParameters;\n    /** @type {?} */\n    SidenavOpenCloseExample.prototype.events;\n    /** @type {?} */\n    SidenavOpenCloseExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-open-close-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic sidenav\n */\nexport class SidenavOverviewExample {\n    constructor() {\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n    }\n}\nSidenavOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-overview-example',\n                template: \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\"><mat-sidenav mode=\\\"side\\\" opened=\\\"true\\\">Sidenav content</mat-sidenav><mat-sidenav-content>Main content</mat-sidenav-content></mat-sidenav-container><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { position: absolute; top: 0; bottom: 0; left: 0; right: 0; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavOverviewExample.ctorParameters = () => [];\nfunction SidenavOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavOverviewExample.ctorParameters;\n    /** @type {?} */\n    SidenavOverviewExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Implicit main content with two sidenavs\n */\nexport class SidenavPositionExample {\n    constructor() {\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n    }\n}\nSidenavPositionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-position-example',\n                template: \"<mat-sidenav-container class=\\\"example-container\\\" *ngIf=\\\"shouldRun\\\"><mat-sidenav opened mode=\\\"side\\\">Start content</mat-sidenav><mat-sidenav opened mode=\\\"side\\\" position=\\\"end\\\">End content</mat-sidenav>Implicit main content</mat-sidenav-container><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { position: absolute; top: 0; bottom: 0; left: 0; right: 0; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavPositionExample.ctorParameters = () => [];\nfunction SidenavPositionExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavPositionExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavPositionExample.ctorParameters;\n    /** @type {?} */\n    SidenavPositionExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-position-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { MediaMatcher } from \"@angular/cdk/layout\";\nimport { ChangeDetectorRef, Component } from \"@angular/core\";\n/**\n * \\@title Responsive sidenav\n */\nexport class SidenavResponsiveExample {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} media\n     */\n    constructor(changeDetectorRef, media) {\n        this.fillerNav = Array(50).fill(0).map((_, i) => `Nav Item ${i + 1}`);\n        this.fillerContent = Array(50).fill(0).map(() => `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n       labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n       laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n       voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n       cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`);\n        this.shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n        this.mobileQuery = media.matchMedia('(max-width: 600px)');\n        this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n        this.mobileQuery.addListener(this._mobileQueryListener);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.mobileQuery.removeListener(this._mobileQueryListener);\n    }\n}\nSidenavResponsiveExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-responsive-example',\n                template: \"<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\" *ngIf=\\\"shouldRun\\\"><mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\"><button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button><h1 class=\\\"example-app-name\\\">Responsive App</h1></mat-toolbar><mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\"><mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\" [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\"><mat-nav-list><a mat-list-item routerLink=\\\".\\\" *ngFor=\\\"let nav of fillerNav\\\">{{nav}}</a></mat-nav-list></mat-sidenav><mat-sidenav-content><p *ngFor=\\\"let content of fillerContent\\\">{{content}}</p></mat-sidenav-content></mat-sidenav-container></div><div *ngIf=\\\"!shouldRun\\\">Please open on Stackblitz to see result</div>\",\n                styles: [\".example-container { display: flex; flex-direction: column; position: absolute; top: 0; bottom: 0; left: 0; right: 0; } .example-is-mobile .example-toolbar { position: fixed; /* Make sure the toolbar will stay on top of the content as it scrolls past. */ z-index: 2; } h1.example-app-name { margin-left: 8px; } .example-sidenav-container { /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */ flex: 1; } .example-is-mobile .example-sidenav-container { /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the `<body>` to be our scrolling element for mobile layouts. */ flex: 1 0 auto; } \"],\n            },] },\n];\n/** @nocollapse */\nSidenavResponsiveExample.ctorParameters = () => [\n    { type: ChangeDetectorRef, },\n    { type: MediaMatcher, },\n];\nfunction SidenavResponsiveExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SidenavResponsiveExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SidenavResponsiveExample.ctorParameters;\n    /** @type {?} */\n    SidenavResponsiveExample.prototype.mobileQuery;\n    /** @type {?} */\n    SidenavResponsiveExample.prototype.fillerNav;\n    /** @type {?} */\n    SidenavResponsiveExample.prototype.fillerContent;\n    /** @type {?} */\n    SidenavResponsiveExample.prototype._mobileQueryListener;\n    /** @type {?} */\n    SidenavResponsiveExample.prototype.shouldRun;\n}\n//# sourceMappingURL=sidenav-responsive-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Configurable slide-toggle\n */\nexport class SlideToggleConfigurableExample {\n    constructor() {\n        this.color = 'accent';\n        this.checked = false;\n        this.disabled = false;\n    }\n}\nSlideToggleConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slide-toggle-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Slider configuration</h2><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Color:</label><mat-radio-group [(ngModel)]=\\\"color\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">Primary</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">Accent</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">Warn</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox></section></mat-card-content></mat-card><mat-card class=\\\"result\\\"><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><section class=\\\"example-section\\\"><mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"color\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\">Slide me!</mat-slide-toggle></section></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 10px; } \"],\n            },] },\n];\n/** @nocollapse */\nSlideToggleConfigurableExample.ctorParameters = () => [];\nfunction SlideToggleConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SlideToggleConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SlideToggleConfigurableExample.ctorParameters;\n    /** @type {?} */\n    SlideToggleConfigurableExample.prototype.color;\n    /** @type {?} */\n    SlideToggleConfigurableExample.prototype.checked;\n    /** @type {?} */\n    SlideToggleConfigurableExample.prototype.disabled;\n}\n//# sourceMappingURL=slide-toggle-configurable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n/**\n * \\@title Slide-toggle with forms\n */\nexport class SlideToggleFormsExample {\n    /**\n     * @param {?} formBuilder\n     */\n    constructor(formBuilder) {\n        this.isChecked = true;\n        this.formGroup = formBuilder.group({\n            enableWifi: '',\n            acceptTerms: ['', Validators.requiredTrue]\n        });\n    }\n    /**\n     * @param {?} formValue\n     * @return {?}\n     */\n    onFormSubmit(formValue) {\n        alert(JSON.stringify(formValue, null, 2));\n    }\n}\nSlideToggleFormsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slide-toggle-forms-example',\n                template: \"<p>Slide Toggle using a simple NgModel.</p><mat-slide-toggle [(ngModel)]=\\\"isChecked\\\">Slide Toggle Checked: {{ isChecked }}</mat-slide-toggle><p>Slide Toggle inside of a Template-driven form</p><form class=\\\"example-form\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onFormSubmit(form.value)\\\" ngNativeValidate><mat-slide-toggle ngModel name=\\\"enableWifi\\\">Enable Wifi</mat-slide-toggle><mat-slide-toggle ngModel name=\\\"acceptTerms\\\" required>Accept Terms of Service</mat-slide-toggle><button mat-raised-button type=\\\"submit\\\">Save Settings</button></form><p>Slide Toggle inside of a Reactive form</p><form class=\\\"example-form\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onFormSubmit(formGroup.value)\\\" ngNativeValidate><mat-slide-toggle formControlName=\\\"enableWifi\\\">Enable Wifi</mat-slide-toggle><mat-slide-toggle formControlName=\\\"acceptTerms\\\">Accept Terms of Service</mat-slide-toggle><p>Form Group Status: {{ formGroup.status}}</p><button mat-rasied-button type=\\\"submit\\\">Save Settings</button></form>\",\n                styles: [\".example-form mat-slide-toggle { margin: 8px 0; display: block; } \"],\n            },] },\n];\n/** @nocollapse */\nSlideToggleFormsExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction SlideToggleFormsExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SlideToggleFormsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SlideToggleFormsExample.ctorParameters;\n    /** @type {?} */\n    SlideToggleFormsExample.prototype.isChecked;\n    /** @type {?} */\n    SlideToggleFormsExample.prototype.formGroup;\n}\n//# sourceMappingURL=slide-toggle-forms-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic slide-toggles\n */\nexport class SlideToggleOverviewExample {\n}\nSlideToggleOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slide-toggle-overview-example',\n                template: \"<mat-slide-toggle>Slide me!</mat-slide-toggle>\",\n            },] },\n];\n/** @nocollapse */\nSlideToggleOverviewExample.ctorParameters = () => [];\nfunction SlideToggleOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SlideToggleOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SlideToggleOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=slide-toggle-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewEncapsulation } from \"@angular/core\";\n/**\n * \\@title Configurable slider\n */\nexport class SliderConfigurableExample {\n    constructor() {\n        this.autoTicks = false;\n        this.disabled = false;\n        this.invert = false;\n        this.max = 100;\n        this.min = 0;\n        this.showTicks = false;\n        this.step = 1;\n        this.thumbLabel = false;\n        this.value = 0;\n        this.vertical = false;\n        this._tickInterval = 1;\n    }\n    /**\n     * @return {?}\n     */\n    get tickInterval() {\n        return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set tickInterval(v) {\n        this._tickInterval = Number(v);\n    }\n}\nSliderConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slider-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Slider configuration</h2><section class=\\\"example-section\\\"><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"value\\\"></mat-form-field><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Min value\\\" [(ngModel)]=\\\"min\\\"></mat-form-field><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Max value\\\" [(ngModel)]=\\\"max\\\"></mat-form-field><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Step size\\\" [(ngModel)]=\\\"step\\\"></mat-form-field></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"showTicks\\\">Show ticks</mat-checkbox><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"autoTicks\\\" *ngIf=\\\"showTicks\\\">Auto ticks</mat-checkbox><mat-form-field class=\\\"example-margin\\\" *ngIf=\\\"showTicks && !autoTicks\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Tick interval\\\" [(ngModel)]=\\\"tickInterval\\\"></mat-form-field></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"thumbLabel\\\">Show thumb label</mat-checkbox></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"vertical\\\">Vertical</mat-checkbox><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"invert\\\">Inverted</mat-checkbox></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox></section></mat-card-content></mat-card><mat-card class=\\\"result\\\"><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><mat-slider class=\\\"example-margin\\\" [disabled]=\\\"disabled\\\" [invert]=\\\"invert\\\" [max]=\\\"max\\\" [min]=\\\"min\\\" [step]=\\\"step\\\" [thumb-label]=\\\"thumbLabel\\\" [tick-interval]=\\\"tickInterval\\\" [(ngModel)]=\\\"value\\\" [vertical]=\\\"vertical\\\"></mat-slider></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 10px; } .mat-slider-horizontal { width: 300px; } .mat-slider-vertical { height: 300px; } \"],\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nSliderConfigurableExample.ctorParameters = () => [];\nfunction SliderConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SliderConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SliderConfigurableExample.ctorParameters;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.autoTicks;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.disabled;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.invert;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.max;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.min;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.showTicks;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.step;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.thumbLabel;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.value;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.vertical;\n    /** @type {?} */\n    SliderConfigurableExample.prototype._tickInterval;\n}\n//# sourceMappingURL=slider-configurable-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic slider\n */\nexport class SliderOverviewExample {\n}\nSliderOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slider-overview-example',\n                template: \"<mat-slider></mat-slider>\",\n                styles: [\"/** No CSS for this example */ mat-slider { width: 300px; } \"],\n            },] },\n];\n/** @nocollapse */\nSliderOverviewExample.ctorParameters = () => [];\nfunction SliderOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SliderOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SliderOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=slider-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material\";\n/**\n * \\@title Snack-bar with a custom component\n */\nexport class SnackBarComponentExample {\n    /**\n     * @param {?} snackBar\n     */\n    constructor(snackBar) {\n        this.snackBar = snackBar;\n    }\n    /**\n     * @return {?}\n     */\n    openSnackBar() {\n        this.snackBar.openFromComponent(PizzaPartyComponent, {\n            duration: 500,\n        });\n    }\n}\nSnackBarComponentExample.decorators = [\n    { type: Component, args: [{\n                selector: 'snack-bar-component-example',\n                template: \"<button mat-button (click)=\\\"openSnackBar()\\\" aria-label=\\\"Show an example snack-bar\\\">Pizza party</button>\",\n            },] },\n];\n/** @nocollapse */\nSnackBarComponentExample.ctorParameters = () => [\n    { type: MatSnackBar, },\n];\nfunction SnackBarComponentExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SnackBarComponentExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SnackBarComponentExample.ctorParameters;\n    /** @type {?} */\n    SnackBarComponentExample.prototype.snackBar;\n}\nexport class PizzaPartyComponent {\n}\nPizzaPartyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'snack-bar-component-example-snack',\n                template: \"<span class=\\\"example-pizza-party\\\">Pizza party!!! 🍕</span>\",\n                styles: [`.example-pizza-party { color: hotpink; }`],\n            },] },\n];\n/** @nocollapse */\nPizzaPartyComponent.ctorParameters = () => [];\nfunction PizzaPartyComponent_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    PizzaPartyComponent.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    PizzaPartyComponent.ctorParameters;\n}\n//# sourceMappingURL=snack-bar-component-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material\";\n/**\n * \\@title Basic snack-bar\n */\nexport class SnackBarOverviewExample {\n    /**\n     * @param {?} snackBar\n     */\n    constructor(snackBar) {\n        this.snackBar = snackBar;\n    }\n    /**\n     * @param {?} message\n     * @param {?} action\n     * @return {?}\n     */\n    openSnackBar(message, action) {\n        this.snackBar.open(message, action, {\n            duration: 2000,\n        });\n    }\n}\nSnackBarOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'snack-bar-overview-example',\n                template: \"<mat-form-field><input matInput value=\\\"Disco party!\\\" placeholder=\\\"Message\\\" #message></mat-form-field><mat-form-field><input matInput value=\\\"Dance\\\" placeholder=\\\"Action\\\" #action></mat-form-field><button mat-button (click)=\\\"openSnackBar(message.value, action.value)\\\">Show snack-bar</button>\",\n            },] },\n];\n/** @nocollapse */\nSnackBarOverviewExample.ctorParameters = () => [\n    { type: MatSnackBar, },\n];\nfunction SnackBarOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SnackBarOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SnackBarOverviewExample.ctorParameters;\n    /** @type {?} */\n    SnackBarOverviewExample.prototype.snackBar;\n}\n//# sourceMappingURL=snack-bar-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Sorting overview\n */\nexport class SortOverviewExample {\n    constructor() {\n        this.desserts = [\n            { name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4' },\n            { name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4' },\n            { name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6' },\n            { name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4' },\n            { name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4' },\n        ];\n        this.sortedData = this.desserts.slice();\n    }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    sortData(sort) {\n        const /** @type {?} */ data = this.desserts.slice();\n        if (!sort.active || sort.direction == '') {\n            this.sortedData = data;\n            return;\n        }\n        this.sortedData = data.sort((a, b) => {\n            let /** @type {?} */ isAsc = sort.direction == 'asc';\n            switch (sort.active) {\n                case 'name': return compare(a.name, b.name, isAsc);\n                case 'calories': return compare(+a.calories, +b.calories, isAsc);\n                case 'fat': return compare(+a.fat, +b.fat, isAsc);\n                case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\n                case 'protein': return compare(+a.protein, +b.protein, isAsc);\n                default: return 0;\n            }\n        });\n    }\n}\nSortOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sort-overview-example',\n                template: \"<table matSort (matSortChange)=\\\"sortData($event)\\\"><tr><th mat-sort-header=\\\"name\\\">Dessert (100g)</th><th mat-sort-header=\\\"calories\\\">Calories</th><th mat-sort-header=\\\"fat\\\">Fat (g)</th><th mat-sort-header=\\\"carbs\\\">Carbs (g)</th><th mat-sort-header=\\\"protein\\\">Protein (g)</th></tr><tr *ngFor=\\\"let dessert of sortedData\\\"><td>{{dessert.name}}</td><td>{{dessert.calories}}</td><td>{{dessert.fat}}</td><td>{{dessert.carbs}}</td><td>{{dessert.protein}}</td></tr></table>\",\n                styles: [\".mat-sort-header-container { align-items: center; } \"],\n            },] },\n];\n/** @nocollapse */\nSortOverviewExample.ctorParameters = () => [];\nfunction SortOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    SortOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    SortOverviewExample.ctorParameters;\n    /** @type {?} */\n    SortOverviewExample.prototype.desserts;\n    /** @type {?} */\n    SortOverviewExample.prototype.sortedData;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} isAsc\n * @return {?}\n */\nfunction compare(a, b, isAsc) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n//# sourceMappingURL=sort-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n/**\n * \\@title Stepper overview\n */\nexport class StepperOverviewExample {\n    /**\n     * @param {?} _formBuilder\n     */\n    constructor(_formBuilder) {\n        this._formBuilder = _formBuilder;\n        this.isLinear = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.firstFormGroup = this._formBuilder.group({\n            firstCtrl: ['', Validators.required]\n        });\n        this.secondFormGroup = this._formBuilder.group({\n            secondCtrl: ['', Validators.required]\n        });\n    }\n}\nStepperOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'stepper-overview-example',\n                template: \"<button mat-raised-button (click)=\\\"isLinear = true\\\" id=\\\"toggle-linear\\\">Enable linear mode</button><mat-horizontal-stepper [linear]=\\\"isLinear\\\"><mat-step [stepControl]=\\\"firstFormGroup\\\"><form [formGroup]=\\\"firstFormGroup\\\"><ng-template matStepLabel>Fill out your name</ng-template><mat-form-field><input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required></mat-form-field><div><button mat-button matStepperNext>Next</button></div></form></mat-step><mat-step [stepControl]=\\\"secondFormGroup\\\"><form [formGroup]=\\\"secondFormGroup\\\"><ng-template matStepLabel>Fill out your address</ng-template><mat-form-field><input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required></mat-form-field><div><button mat-button matStepperPrevious>Back</button> <button mat-button matStepperNext>Next</button></div></form></mat-step><mat-step><ng-template matStepLabel>Done</ng-template>You are now done.<div><button mat-button matStepperPrevious>Back</button></div></mat-step></mat-horizontal-stepper>\",\n                styles: [\"/** No CSS for this example */ \"]\n            },] },\n];\n/** @nocollapse */\nStepperOverviewExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction StepperOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    StepperOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    StepperOverviewExample.ctorParameters;\n    /** @type {?} */\n    StepperOverviewExample.prototype.isLinear;\n    /** @type {?} */\n    StepperOverviewExample.prototype.firstFormGroup;\n    /** @type {?} */\n    StepperOverviewExample.prototype.secondFormGroup;\n    /** @type {?} */\n    StepperOverviewExample.prototype._formBuilder;\n}\n//# sourceMappingURL=stepper-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material\";\n/**\n * \\@title Basic table\n */\nexport class TableBasicExample {\n    constructor() {\n        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    }\n}\nTableBasicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-basic-example',\n                styles: [\".example-container { display: flex; flex-direction: column; max-height: 500px; min-width: 300px; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"position\\\"><mat-header-cell *matHeaderCellDef>No.</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.position}}</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"weight\\\"><mat-header-cell *matHeaderCellDef>Weight</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.weight}}</mat-cell></ng-container><ng-container matColumnDef=\\\"symbol\\\"><mat-header-cell *matHeaderCellDef>Symbol</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.symbol}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/** @nocollapse */\nTableBasicExample.ctorParameters = () => [];\nfunction TableBasicExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TableBasicExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TableBasicExample.ctorParameters;\n    /** @type {?} */\n    TableBasicExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableBasicExample.prototype.dataSource;\n}\n/**\n * @record\n */\nexport function Element() { }\nfunction Element_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.position;\n    /** @type {?} */\n    Element.prototype.weight;\n    /** @type {?} */\n    Element.prototype.symbol;\n}\nconst /** @type {?} */ ELEMENT_DATA = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n//# sourceMappingURL=table-basic-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material\";\n/**\n * \\@title Table with filtering\n */\nexport class TableFilteringExample {\n    constructor() {\n        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    }\n    /**\n     * @param {?} filterValue\n     * @return {?}\n     */\n    applyFilter(filterValue) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n}\nTableFilteringExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-filtering-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } .example-header { min-height: 64px; padding: 8px 24px 0; } .mat-form-field { font-size: 14px; width: 100%; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><div class=\\\"example-header\\\"><mat-form-field><input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\"></mat-form-field></div><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"position\\\"><mat-header-cell *matHeaderCellDef>No.</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.position}}</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"weight\\\"><mat-header-cell *matHeaderCellDef>Weight</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.weight}}</mat-cell></ng-container><ng-container matColumnDef=\\\"symbol\\\"><mat-header-cell *matHeaderCellDef>Symbol</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.symbol}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/** @nocollapse */\nTableFilteringExample.ctorParameters = () => [];\nfunction TableFilteringExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TableFilteringExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TableFilteringExample.ctorParameters;\n    /** @type {?} */\n    TableFilteringExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableFilteringExample.prototype.dataSource;\n}\n/**\n * @record\n */\nexport function Element() { }\nfunction Element_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.position;\n    /** @type {?} */\n    Element.prototype.weight;\n    /** @type {?} */\n    Element.prototype.symbol;\n}\nconst /** @type {?} */ ELEMENT_DATA = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n//# sourceMappingURL=table-filtering-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewChild } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatPaginator, MatSort, MatTableDataSource } from \"@angular/material\";\nimport { merge } from \"rxjs/observable/merge\";\nimport { of as observableOf } from \"rxjs/observable/of\";\nimport { catchError } from \"rxjs/operators/catchError\";\nimport { map } from \"rxjs/operators/map\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { switchMap } from \"rxjs/operators/switchMap\";\n/**\n * \\@title Table retrieving data through HTTP\n */\nexport class TableHttpExample {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n        this.displayedColumns = ['created', 'state', 'number', 'title'];\n        this.dataSource = new MatTableDataSource();\n        this.resultsLength = 0;\n        this.isLoadingResults = false;\n        this.isRateLimitReached = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.exampleDatabase = new ExampleHttpDao(this.http);\n        // If the user changes the sort order, reset back to the first page.\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n        merge(this.sort.sortChange, this.paginator.page)\n            .pipe(startWith({}), switchMap(() => {\n            this.isLoadingResults = true;\n            return /** @type {?} */ ((this.exampleDatabase)).getRepoIssues(this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }), map(data => {\n            // Flip flag to show that loading has finished.\n            this.isLoadingResults = false;\n            this.isRateLimitReached = false;\n            this.resultsLength = data.total_count;\n            return data.items;\n        }), catchError(() => {\n            this.isLoadingResults = false;\n            // Catch if the GitHub API has reached its rate limit. Return empty data.\n            this.isRateLimitReached = true;\n            return observableOf([]);\n        })).subscribe(data => this.dataSource.data = data);\n    }\n}\nTableHttpExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-http-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; max-height: 500px; min-width: 300px; position: relative; } .example-header { min-height: 64px; display: flex; align-items: center; padding-left: 24px; font-size: 20px; } .example-table { overflow: auto; min-height: 300px; } .example-loading-shade { position: absolute; top: 0; left: 0; bottom: 56px; right: 0; background: rgba(0, 0, 0, 0.15); z-index: 1; display: flex; align-items: center; justify-content: center; } .example-rate-limit-reached { color: #980000; max-width: 360px; text-align: center; } /* Column Widths */ .mat-column-number, .mat-column-state { max-width: 64px; } .mat-column-created { max-width: 124px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\"><mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner><div class=\\\"example-rate-limit-reached\\\" *ngIf=\\\"isRateLimitReached\\\">GitHub's API rate limit has been reached. It will be reset in one minute.</div></div><mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"example-table\\\" matSort matSortActive=\\\"created\\\" matSortDisableClear matSortDirection=\\\"asc\\\"><ng-container matColumnDef=\\\"number\\\"><mat-header-cell *matHeaderCellDef>#</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.number }}</mat-cell></ng-container><ng-container matColumnDef=\\\"title\\\"><mat-header-cell *matHeaderCellDef>Title</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.title }}</mat-cell></ng-container><ng-container matColumnDef=\\\"state\\\"><mat-header-cell *matHeaderCellDef>State</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.state }}</mat-cell></ng-container><ng-container matColumnDef=\\\"created\\\"><mat-header-cell *matHeaderCellDef mat-sort-header disableClear=\\\"true\\\">Created</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.created_at | date }}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table><mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator></div>\",\n            },] },\n];\n/** @nocollapse */\nTableHttpExample.ctorParameters = () => [\n    { type: HttpClient, },\n];\nTableHttpExample.propDecorators = {\n    \"paginator\": [{ type: ViewChild, args: [MatPaginator,] },],\n    \"sort\": [{ type: ViewChild, args: [MatSort,] },],\n};\nfunction TableHttpExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TableHttpExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TableHttpExample.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    TableHttpExample.propDecorators;\n    /** @type {?} */\n    TableHttpExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableHttpExample.prototype.exampleDatabase;\n    /** @type {?} */\n    TableHttpExample.prototype.dataSource;\n    /** @type {?} */\n    TableHttpExample.prototype.resultsLength;\n    /** @type {?} */\n    TableHttpExample.prototype.isLoadingResults;\n    /** @type {?} */\n    TableHttpExample.prototype.isRateLimitReached;\n    /** @type {?} */\n    TableHttpExample.prototype.paginator;\n    /** @type {?} */\n    TableHttpExample.prototype.sort;\n    /** @type {?} */\n    TableHttpExample.prototype.http;\n}\n/**\n * @record\n */\nexport function GithubApi() { }\nfunction GithubApi_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GithubApi.prototype.items;\n    /** @type {?} */\n    GithubApi.prototype.total_count;\n}\n/**\n * @record\n */\nexport function GithubIssue() { }\nfunction GithubIssue_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GithubIssue.prototype.created_at;\n    /** @type {?} */\n    GithubIssue.prototype.number;\n    /** @type {?} */\n    GithubIssue.prototype.state;\n    /** @type {?} */\n    GithubIssue.prototype.title;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n    }\n    /**\n     * @param {?} sort\n     * @param {?} order\n     * @param {?} page\n     * @return {?}\n     */\n    getRepoIssues(sort, order, page) {\n        const /** @type {?} */ href = 'https://api.github.com/search/issues';\n        const /** @type {?} */ requestUrl = `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\n        return this.http.get(requestUrl);\n    }\n}\nfunction ExampleHttpDao_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleHttpDao.prototype.http;\n}\n//# sourceMappingURL=table-http-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatPaginator, MatSort, MatTableDataSource } from \"@angular/material\";\n/**\n * \\@title Data table with sorting, pagination, and filtering.\n */\nexport class TableOverviewExample {\n    constructor() {\n        this.displayedColumns = ['id', 'name', 'progress', 'color'];\n        // Create 100 users\n        const /** @type {?} */ users = [];\n        for (let /** @type {?} */ i = 1; i <= 100; i++) {\n            users.push(createNewUser(i));\n        }\n        // Assign the data to the data source for the table to render\n        this.dataSource = new MatTableDataSource(users);\n    }\n    /**\n     * Set the paginator and sort after the view init since this component will\n     * be able to query its view for the initialized paginator and sort.\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n    /**\n     * @param {?} filterValue\n     * @return {?}\n     */\n    applyFilter(filterValue) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n}\nTableOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-overview-example',\n                styles: [\".example-container { display: flex; flex-direction: column; min-width: 300px; } .example-header { min-height: 64px; padding: 8px 24px 0; } .mat-form-field { font-size: 14px; width: 100%; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-header\\\"><mat-form-field><input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\"></mat-form-field></div><div class=\\\"example-container mat-elevation-z8\\\"><mat-table [dataSource]=\\\"dataSource\\\" matSort><ng-container matColumnDef=\\\"id\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell></ng-container><ng-container matColumnDef=\\\"progress\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Progress</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.progress}}%</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"color\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Color</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">{{row.color}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table><mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator></div>\",\n            },] },\n];\n/** @nocollapse */\nTableOverviewExample.ctorParameters = () => [];\nTableOverviewExample.propDecorators = {\n    \"paginator\": [{ type: ViewChild, args: [MatPaginator,] },],\n    \"sort\": [{ type: ViewChild, args: [MatSort,] },],\n};\nfunction TableOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TableOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TableOverviewExample.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    TableOverviewExample.propDecorators;\n    /** @type {?} */\n    TableOverviewExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableOverviewExample.prototype.dataSource;\n    /** @type {?} */\n    TableOverviewExample.prototype.paginator;\n    /** @type {?} */\n    TableOverviewExample.prototype.sort;\n}\n/**\n * Builds and returns a new User.\n * @param {?} id\n * @return {?}\n */\nfunction createNewUser(id) {\n    const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n    return {\n        id: id.toString(),\n        name: name,\n        progress: Math.round(Math.random() * 100).toString(),\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n}\n/**\n * Constants used to fill up our data base.\n */\nconst /** @type {?} */ COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * @record\n */\nexport function UserData() { }\nfunction UserData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UserData.prototype.id;\n    /** @type {?} */\n    UserData.prototype.name;\n    /** @type {?} */\n    UserData.prototype.progress;\n    /** @type {?} */\n    UserData.prototype.color;\n}\n//# sourceMappingURL=table-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatPaginator, MatTableDataSource } from \"@angular/material\";\n/**\n * \\@title Table with pagination\n */\nexport class TablePaginationExample {\n    constructor() {\n        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    }\n    /**\n     * Set the paginator after the view init since this component will\n     * be able to query its view for the initialized paginator.\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n    }\n}\nTablePaginationExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-pagination-example',\n                styles: [\".example-container { display: flex; flex-direction: column; min-width: 300px; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"position\\\"><mat-header-cell *matHeaderCellDef>No.</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.position}}</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"weight\\\"><mat-header-cell *matHeaderCellDef>Weight</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.weight}}</mat-cell></ng-container><ng-container matColumnDef=\\\"symbol\\\"><mat-header-cell *matHeaderCellDef>Symbol</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.symbol}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table><mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\"></mat-paginator></div>\",\n            },] },\n];\n/** @nocollapse */\nTablePaginationExample.ctorParameters = () => [];\nTablePaginationExample.propDecorators = {\n    \"paginator\": [{ type: ViewChild, args: [MatPaginator,] },],\n};\nfunction TablePaginationExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TablePaginationExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TablePaginationExample.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    TablePaginationExample.propDecorators;\n    /** @type {?} */\n    TablePaginationExample.prototype.displayedColumns;\n    /** @type {?} */\n    TablePaginationExample.prototype.dataSource;\n    /** @type {?} */\n    TablePaginationExample.prototype.paginator;\n}\n/**\n * @record\n */\nexport function Element() { }\nfunction Element_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.position;\n    /** @type {?} */\n    Element.prototype.weight;\n    /** @type {?} */\n    Element.prototype.symbol;\n}\nconst /** @type {?} */ ELEMENT_DATA = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n//# sourceMappingURL=table-pagination-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\n/**\n * \\@title Table with selection\n */\nexport class TableSelectionExample {\n    constructor() {\n        this.displayedColumns = ['select', 'position', 'name', 'weight', 'symbol'];\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n        this.selection = new SelectionModel(true, []);\n    }\n    /**\n     * Whether the number of selected elements matches the total number of rows.\n     * @return {?}\n     */\n    isAllSelected() {\n        const /** @type {?} */ numSelected = this.selection.selected.length;\n        const /** @type {?} */ numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n    /**\n     * Selects all rows if they are not all selected; otherwise clear selection.\n     * @return {?}\n     */\n    masterToggle() {\n        this.isAllSelected() ?\n            this.selection.clear() :\n            this.dataSource.data.forEach(row => this.selection.select(row));\n    }\n}\nTableSelectionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-selection-example',\n                styles: [\".example-container { display: flex; flex-direction: column; max-height: 500px; min-width: 300px; } .mat-table { overflow: auto; max-height: 500px; } .mat-column-select { overflow: visible; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"select\\\"><mat-header-cell *matHeaderCellDef><mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\" [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"></mat-checkbox></mat-header-cell><mat-cell *matCellDef=\\\"let row\\\"><mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\"></mat-checkbox></mat-cell></ng-container><ng-container matColumnDef=\\\"position\\\"><mat-header-cell *matHeaderCellDef>No.</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.position}}</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"weight\\\"><mat-header-cell *matHeaderCellDef>Weight</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.weight}}</mat-cell></ng-container><ng-container matColumnDef=\\\"symbol\\\"><mat-header-cell *matHeaderCellDef>Symbol</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.symbol}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/** @nocollapse */\nTableSelectionExample.ctorParameters = () => [];\nfunction TableSelectionExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TableSelectionExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TableSelectionExample.ctorParameters;\n    /** @type {?} */\n    TableSelectionExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableSelectionExample.prototype.dataSource;\n    /** @type {?} */\n    TableSelectionExample.prototype.selection;\n}\n/**\n * @record\n */\nexport function Element() { }\nfunction Element_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.position;\n    /** @type {?} */\n    Element.prototype.weight;\n    /** @type {?} */\n    Element.prototype.symbol;\n}\nconst /** @type {?} */ ELEMENT_DATA = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n//# sourceMappingURL=table-selection-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource, MatSort } from \"@angular/material\";\n/**\n * \\@title Table with sorting\n */\nexport class TableSortingExample {\n    constructor() {\n        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    }\n    /**\n     * Set the sort after the view init since this component will\n     * be able to query its view for the initialized sort.\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.dataSource.sort = this.sort;\n    }\n}\nTableSortingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-sorting-example',\n                styles: [\".example-container { display: flex; flex-direction: column; min-width: 300px; } .mat-table { overflow: auto; max-height: 500px; } .mat-header-cell.mat-sort-header-sorted { color: black; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\" matSort><ng-container matColumnDef=\\\"position\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>No.</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.position}}</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"weight\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Weight</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.weight}}</mat-cell></ng-container><ng-container matColumnDef=\\\"symbol\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Symbol</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.symbol}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/** @nocollapse */\nTableSortingExample.ctorParameters = () => [];\nTableSortingExample.propDecorators = {\n    \"sort\": [{ type: ViewChild, args: [MatSort,] },],\n};\nfunction TableSortingExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TableSortingExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TableSortingExample.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    TableSortingExample.propDecorators;\n    /** @type {?} */\n    TableSortingExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableSortingExample.prototype.dataSource;\n    /** @type {?} */\n    TableSortingExample.prototype.sort;\n}\n/**\n * @record\n */\nexport function Element() { }\nfunction Element_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.position;\n    /** @type {?} */\n    Element.prototype.weight;\n    /** @type {?} */\n    Element.prototype.symbol;\n}\nconst /** @type {?} */ ELEMENT_DATA = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n//# sourceMappingURL=table-sorting-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic tabs\n */\nexport class TabsOverviewExample {\n}\nTabsOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-overview-example',\n                template: \"<mat-tab-group><mat-tab label=\\\"Tab 1\\\">Content 1</mat-tab><mat-tab label=\\\"Tab 2\\\">Content 2</mat-tab></mat-tab-group>\",\n            },] },\n];\n/** @nocollapse */\nTabsOverviewExample.ctorParameters = () => [];\nfunction TabsOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TabsOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TabsOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=tabs-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Complex Example\n */\nexport class TabsTemplateLabelExample {\n}\nTabsTemplateLabelExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-template-label-example',\n                template: \"<mat-tab-group class=\\\"demo-tab-group\\\"><mat-tab label=\\\"Tab 1\\\"><div class=\\\"demo-tab-content\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.</div></mat-tab><mat-tab label=\\\"Tab 2\\\"><ng-template mat-tab-label>⭐</ng-template><div class=\\\"demo-tab-content\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.</div></mat-tab><mat-tab label=\\\"Tab 3\\\" disabled=\\\"disabled\\\">No content</mat-tab><mat-tab label=\\\"Tab 4\\\"><div class=\\\"demo-tab-content\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.<br><br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.</div></mat-tab><mat-tab label=\\\"Tab 5\\\">No content</mat-tab><mat-tab label=\\\"Tab 6\\\">No content</mat-tab></mat-tab-group>\",\n                styles: [\".demo-tab-group { border: 1px solid #e8e8e8; } .demo-tab-content { padding: 16px; } \"]\n            },] },\n];\n/** @nocollapse */\nTabsTemplateLabelExample.ctorParameters = () => [];\nfunction TabsTemplateLabelExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TabsTemplateLabelExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TabsTemplateLabelExample.ctorParameters;\n}\n//# sourceMappingURL=tabs-template-label-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Multi-row toolbar\n */\nexport class ToolbarMultirowExample {\n}\nToolbarMultirowExample.decorators = [\n    { type: Component, args: [{\n                selector: 'toolbar-multirow-example',\n                template: \"<mat-toolbar color=\\\"primary\\\"><mat-toolbar-row><span>Custom Toolbar</span></mat-toolbar-row><mat-toolbar-row><span>Second Line</span> <span class=\\\"example-spacer\\\"></span><mat-icon class=\\\"example-icon\\\">verified_user</mat-icon></mat-toolbar-row><mat-toolbar-row><span>Third Line</span> <span class=\\\"example-spacer\\\"></span><mat-icon class=\\\"example-icon\\\">favorite</mat-icon><mat-icon class=\\\"example-icon\\\">delete</mat-icon></mat-toolbar-row></mat-toolbar>\",\n                styles: [\".example-icon { padding: 0 14px; } .example-spacer { flex: 1 1 auto; } \"],\n            },] },\n];\n/** @nocollapse */\nToolbarMultirowExample.ctorParameters = () => [];\nfunction ToolbarMultirowExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ToolbarMultirowExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ToolbarMultirowExample.ctorParameters;\n}\n//# sourceMappingURL=toolbar-multirow-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic toolbar\n */\nexport class ToolbarOverviewExample {\n}\nToolbarOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'toolbar-overview-example',\n                template: \"<mat-toolbar>My App</mat-toolbar>\",\n            },] },\n];\n/** @nocollapse */\nToolbarOverviewExample.ctorParameters = () => [];\nfunction ToolbarOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ToolbarOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ToolbarOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=toolbar-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Basic tooltip\n */\nexport class TooltipOverviewExample {\n}\nTooltipOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-overview-example',\n                template: \"<span matTooltip=\\\"Tooltip!\\\">I have a tooltip</span>\",\n            },] },\n];\n/** @nocollapse */\nTooltipOverviewExample.ctorParameters = () => [];\nfunction TooltipOverviewExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TooltipOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TooltipOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=tooltip-overview-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Component } from \"@angular/core\";\n/**\n * \\@title Tooltip with custom position\n */\nexport class TooltipPositionExample {\n    constructor() {\n        this.position = 'before';\n    }\n}\nTooltipPositionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-position-example',\n                template: \"<div class=\\\"example-tooltip-host\\\" matTooltip=\\\"Tooltip!\\\" [matTooltipPosition]=\\\"position\\\"><span>Show tooltip</span><mat-form-field><mat-select class=\\\"example-select\\\" [(ngModel)]=\\\"position\\\"><mat-option value=\\\"before\\\">Before</mat-option><mat-option value=\\\"after\\\">After</mat-option><mat-option value=\\\"above\\\">Above</mat-option><mat-option value=\\\"below\\\">Below</mat-option><mat-option value=\\\"left\\\">Left</mat-option><mat-option value=\\\"right\\\">Right</mat-option></mat-select></mat-form-field></div>\",\n                styles: [\".example-tooltip-host { display: inline-flex; align-items: center; margin: 50px; } .example-select { margin: 0 10px; } \"],\n            },] },\n];\n/** @nocollapse */\nTooltipPositionExample.ctorParameters = () => [];\nfunction TooltipPositionExample_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    TooltipPositionExample.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    TooltipPositionExample.ctorParameters;\n    /** @type {?} */\n    TooltipPositionExample.prototype.position;\n}\n//# sourceMappingURL=tooltip-position-example.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/* tslint:disable */\n/** DO NOT MANUALLY EDIT THIS FILE, IT IS GENERATED VIA GULP 'build-examples-module' */\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { ExampleMaterialModule } from \"./material-module\";\n/**\n * @record\n */\nexport function LiveExample() { }\nfunction LiveExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiveExample.prototype.title;\n    /** @type {?} */\n    LiveExample.prototype.component;\n    /** @type {?|undefined} */\n    LiveExample.prototype.additionalFiles;\n    /** @type {?|undefined} */\n    LiveExample.prototype.selectorName;\n}\nimport { AutocompleteDisplayExample } from \"./autocomplete-display/autocomplete-display-example\";\nimport { AutocompleteFilterExample } from \"./autocomplete-filter/autocomplete-filter-example\";\nimport { AutocompleteOverviewExample } from \"./autocomplete-overview/autocomplete-overview-example\";\nimport { AutocompleteSimpleExample } from \"./autocomplete-simple/autocomplete-simple-example\";\nimport { ButtonOverviewExample } from \"./button-overview/button-overview-example\";\nimport { ButtonToggleExclusiveExample } from \"./button-toggle-exclusive/button-toggle-exclusive-example\";\nimport { ButtonToggleOverviewExample } from \"./button-toggle-overview/button-toggle-overview-example\";\nimport { ButtonTypesExample } from \"./button-types/button-types-example\";\nimport { CardFancyExample } from \"./card-fancy/card-fancy-example\";\nimport { CardOverviewExample } from \"./card-overview/card-overview-example\";\nimport { CdkTableBasicExample } from \"./cdk-table-basic/cdk-table-basic-example\";\nimport { CheckboxConfigurableExample } from \"./checkbox-configurable/checkbox-configurable-example\";\nimport { CheckboxOverviewExample } from \"./checkbox-overview/checkbox-overview-example\";\nimport { ChipsInputExample } from \"./chips-input/chips-input-example\";\nimport { ChipsOverviewExample } from \"./chips-overview/chips-overview-example\";\nimport { ChipsStackedExample } from \"./chips-stacked/chips-stacked-example\";\nimport { DatepickerApiExample } from \"./datepicker-api/datepicker-api-example\";\nimport { DatepickerDisabledExample } from \"./datepicker-disabled/datepicker-disabled-example\";\nimport { DatepickerEventsExample } from \"./datepicker-events/datepicker-events-example\";\nimport { DatepickerFilterExample } from \"./datepicker-filter/datepicker-filter-example\";\nimport { DatepickerFormatsExample } from \"./datepicker-formats/datepicker-formats-example\";\nimport { DatepickerLocaleExample } from \"./datepicker-locale/datepicker-locale-example\";\nimport { DatepickerMinMaxExample } from \"./datepicker-min-max/datepicker-min-max-example\";\nimport { DatepickerMomentExample } from \"./datepicker-moment/datepicker-moment-example\";\nimport { DatepickerOverviewExample } from \"./datepicker-overview/datepicker-overview-example\";\nimport { DatepickerStartViewExample } from \"./datepicker-start-view/datepicker-start-view-example\";\nimport { DatepickerTouchExample } from \"./datepicker-touch/datepicker-touch-example\";\nimport { DatepickerValueExample } from \"./datepicker-value/datepicker-value-example\";\nimport { DialogContentExampleDialog, DialogContentExample } from \"./dialog-content/dialog-content-example\";\nimport { DialogDataExampleDialog, DialogDataExample } from \"./dialog-data/dialog-data-example\";\nimport { DialogElementsExampleDialog, DialogElementsExample } from \"./dialog-elements/dialog-elements-example\";\nimport { DialogOverviewExampleDialog, DialogOverviewExample } from \"./dialog-overview/dialog-overview-example\";\nimport { ElevationOverviewExample } from \"./elevation-overview/elevation-overview-example\";\nimport { ExpansionOverviewExample } from \"./expansion-overview/expansion-overview-example\";\nimport { ExpansionStepsExample } from \"./expansion-steps/expansion-steps-example\";\nimport { MyTelInput, FormFieldCustomControlExample } from \"./form-field-custom-control/form-field-custom-control-example\";\nimport { FormFieldErrorExample } from \"./form-field-error/form-field-error-example\";\nimport { FormFieldHintExample } from \"./form-field-hint/form-field-hint-example\";\nimport { FormFieldLabelExample } from \"./form-field-label/form-field-label-example\";\nimport { FormFieldOverviewExample } from \"./form-field-overview/form-field-overview-example\";\nimport { FormFieldPrefixSuffixExample } from \"./form-field-prefix-suffix/form-field-prefix-suffix-example\";\nimport { FormFieldThemingExample } from \"./form-field-theming/form-field-theming-example\";\nimport { GridListDynamicExample } from \"./grid-list-dynamic/grid-list-dynamic-example\";\nimport { GridListOverviewExample } from \"./grid-list-overview/grid-list-overview-example\";\nimport { IconOverviewExample } from \"./icon-overview/icon-overview-example\";\nimport { IconSvgExample } from \"./icon-svg-example/icon-svg-example\";\nimport { InputAutosizeTextareaExample } from \"./input-autosize-textarea/input-autosize-textarea-example\";\nimport { InputClearableExample } from \"./input-clearable/input-clearable-example\";\nimport { InputErrorStateMatcherExample } from \"./input-error-state-matcher/input-error-state-matcher-example\";\nimport { InputErrorsExample } from \"./input-errors/input-errors-example\";\nimport { InputFormExample } from \"./input-form/input-form-example\";\nimport { InputHintExample } from \"./input-hint/input-hint-example\";\nimport { InputOverviewExample } from \"./input-overview/input-overview-example\";\nimport { InputPrefixSuffixExample } from \"./input-prefix-suffix/input-prefix-suffix-example\";\nimport { ListOverviewExample } from \"./list-overview/list-overview-example\";\nimport { ListSectionsExample } from \"./list-sections/list-sections-example\";\nimport { ListSelectionExample } from \"./list-selection/list-selection-example\";\nimport { MenuIconsExample } from \"./menu-icons/menu-icons-example\";\nimport { MenuOverviewExample } from \"./menu-overview/menu-overview-example\";\nimport { NestedMenuExample } from \"./nested-menu/nested-menu-example\";\nimport { PaginatorConfigurableExample } from \"./paginator-configurable/paginator-configurable-example\";\nimport { PaginatorOverviewExample } from \"./paginator-overview/paginator-overview-example\";\nimport { ProgressBarBufferExample } from \"./progress-bar-buffer/progress-bar-buffer-example\";\nimport { ProgressBarConfigurableExample } from \"./progress-bar-configurable/progress-bar-configurable-example\";\nimport { ProgressBarDeterminateExample } from \"./progress-bar-determinate/progress-bar-determinate-example\";\nimport { ProgressBarIndeterminateExample } from \"./progress-bar-indeterminate/progress-bar-indeterminate-example\";\nimport { ProgressBarQueryExample } from \"./progress-bar-query/progress-bar-query-example\";\nimport { ProgressSpinnerConfigurableExample } from \"./progress-spinner-configurable/progress-spinner-configurable-example\";\nimport { ProgressSpinnerOverviewExample } from \"./progress-spinner-overview/progress-spinner-overview-example\";\nimport { RadioNgModelExample } from \"./radio-ng-model/radio-ng-model-example\";\nimport { RadioOverviewExample } from \"./radio-overview/radio-overview-example\";\nimport { SelectCustomTriggerExample } from \"./select-custom-trigger/select-custom-trigger-example\";\nimport { SelectDisabledExample } from \"./select-disabled/select-disabled-example\";\nimport { SelectErrorStateMatcherExample } from \"./select-error-state-matcher/select-error-state-matcher-example\";\nimport { SelectFormExample } from \"./select-form/select-form-example\";\nimport { SelectHintErrorExample } from \"./select-hint-error/select-hint-error-example\";\nimport { SelectMultipleExample } from \"./select-multiple/select-multiple-example\";\nimport { SelectNoRippleExample } from \"./select-no-ripple/select-no-ripple-example\";\nimport { SelectOptgroupExample } from \"./select-optgroup/select-optgroup-example\";\nimport { SelectOverviewExample } from \"./select-overview/select-overview-example\";\nimport { SelectPanelClassExample } from \"./select-panel-class/select-panel-class-example\";\nimport { SelectResetExample } from \"./select-reset/select-reset-example\";\nimport { SelectValueBindingExample } from \"./select-value-binding/select-value-binding-example\";\nimport { SidenavAutosizeExample } from \"./sidenav-autosize/sidenav-autosize-example\";\nimport { SidenavDisableCloseExample } from \"./sidenav-disable-close/sidenav-disable-close-example\";\nimport { SidenavDrawerOverviewExample } from \"./sidenav-drawer-overview/sidenav-drawer-overview-example\";\nimport { SidenavFixedExample } from \"./sidenav-fixed/sidenav-fixed-example\";\nimport { SidenavModeExample } from \"./sidenav-mode/sidenav-mode-example\";\nimport { SidenavOpenCloseExample } from \"./sidenav-open-close/sidenav-open-close-example\";\nimport { SidenavOverviewExample } from \"./sidenav-overview/sidenav-overview-example\";\nimport { SidenavPositionExample } from \"./sidenav-position/sidenav-position-example\";\nimport { SidenavResponsiveExample } from \"./sidenav-responsive/sidenav-responsive-example\";\nimport { SlideToggleConfigurableExample } from \"./slide-toggle-configurable/slide-toggle-configurable-example\";\nimport { SlideToggleFormsExample } from \"./slide-toggle-forms/slide-toggle-forms-example\";\nimport { SlideToggleOverviewExample } from \"./slide-toggle-overview/slide-toggle-overview-example\";\nimport { SliderConfigurableExample } from \"./slider-configurable/slider-configurable-example\";\nimport { SliderOverviewExample } from \"./slider-overview/slider-overview-example\";\nimport { PizzaPartyComponent, SnackBarComponentExample } from \"./snack-bar-component/snack-bar-component-example\";\nimport { SnackBarOverviewExample } from \"./snack-bar-overview/snack-bar-overview-example\";\nimport { SortOverviewExample } from \"./sort-overview/sort-overview-example\";\nimport { StepperOverviewExample } from \"./stepper-overview/stepper-overview-example\";\nimport { TableBasicExample } from \"./table-basic/table-basic-example\";\nimport { TableFilteringExample } from \"./table-filtering/table-filtering-example\";\nimport { TableHttpExample } from \"./table-http/table-http-example\";\nimport { TableOverviewExample } from \"./table-overview/table-overview-example\";\nimport { TablePaginationExample } from \"./table-pagination/table-pagination-example\";\nimport { TableSelectionExample } from \"./table-selection/table-selection-example\";\nimport { TableSortingExample } from \"./table-sorting/table-sorting-example\";\nimport { TabsOverviewExample } from \"./tabs-overview/tabs-overview-example\";\nimport { TabsTemplateLabelExample } from \"./tabs-template-label/tabs-template-label-example\";\nimport { ToolbarMultirowExample } from \"./toolbar-multirow/toolbar-multirow-example\";\nimport { ToolbarOverviewExample } from \"./toolbar-overview/toolbar-overview-example\";\nimport { TooltipOverviewExample } from \"./tooltip-overview/tooltip-overview-example\";\nimport { TooltipPositionExample } from \"./tooltip-position/tooltip-position-example\";\nexport const /** @type {?} */ EXAMPLE_COMPONENTS = {\n    'autocomplete-display': {\n        title: 'Display value autocomplete',\n        component: AutocompleteDisplayExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'autocomplete-filter': {\n        title: 'Filter autocomplete',\n        component: AutocompleteFilterExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'autocomplete-overview': {\n        title: 'Autocomplete overview',\n        component: AutocompleteOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'autocomplete-simple': {\n        title: 'Simple autocomplete',\n        component: AutocompleteSimpleExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-overview': {\n        title: 'Basic buttons',\n        component: ButtonOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-toggle-exclusive': {\n        title: 'Exclusive selection',\n        component: ButtonToggleExclusiveExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-toggle-overview': {\n        title: 'Basic button-toggles',\n        component: ButtonToggleOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-types': {\n        title: 'Button varieties',\n        component: ButtonTypesExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'card-fancy': {\n        title: 'Card with multiple sections',\n        component: CardFancyExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'card-overview': {\n        title: 'Basic cards',\n        component: CardOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'cdk-table-basic': {\n        title: 'Basic CDK data-table',\n        component: CdkTableBasicExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'checkbox-configurable': {\n        title: 'Configurable checkbox',\n        component: CheckboxConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'checkbox-overview': {\n        title: 'Basic checkboxes',\n        component: CheckboxOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'chips-input': {\n        title: 'Chips with input',\n        component: ChipsInputExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'chips-overview': {\n        title: 'Basic chips',\n        component: ChipsOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'chips-stacked': {\n        title: 'Stacked chips',\n        component: ChipsStackedExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-api': {\n        title: 'Datepicker open method ',\n        component: DatepickerApiExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-disabled': {\n        title: 'Disabled datepicker ',\n        component: DatepickerDisabledExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-events': {\n        title: 'Datepicker input and change events ',\n        component: DatepickerEventsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-filter': {\n        title: 'Datepicker with filter validation ',\n        component: DatepickerFilterExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-formats': {\n        title: 'Datepicker with custom formats ',\n        component: DatepickerFormatsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-locale': {\n        title: 'Datepicker with different locale ',\n        component: DatepickerLocaleExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-min-max': {\n        title: 'Datepicker with min & max validation ',\n        component: DatepickerMinMaxExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-moment': {\n        title: 'Datepicker that uses Moment.js dates ',\n        component: DatepickerMomentExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-overview': {\n        title: 'Basic datepicker ',\n        component: DatepickerOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-start-view': {\n        title: 'Datepicker start date ',\n        component: DatepickerStartViewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-touch': {\n        title: 'Datepicker touch UI ',\n        component: DatepickerTouchExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-value': {\n        title: 'Datepicker selected value ',\n        component: DatepickerValueExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'dialog-content': {\n        title: 'Dialog with header, scrollable content and actions',\n        component: DialogContentExample,\n        additionalFiles: [\"dialog-content-example-dialog.html\"],\n        selectorName: 'DialogContentExample, DialogContentExampleDialog'\n    },\n    'dialog-data': {\n        title: 'Injecting data when opening a dialog',\n        component: DialogDataExample,\n        additionalFiles: [\"dialog-data-example-dialog.html\"],\n        selectorName: 'DialogDataExample, DialogDataExampleDialog'\n    },\n    'dialog-elements': {\n        title: 'Dialog elements',\n        component: DialogElementsExample,\n        additionalFiles: [\"dialog-elements-example-dialog.html\"],\n        selectorName: 'DialogElementsExample, DialogElementsExampleDialog'\n    },\n    'dialog-overview': {\n        title: 'Dialog Overview',\n        component: DialogOverviewExample,\n        additionalFiles: [\"dialog-overview-example-dialog.html\"],\n        selectorName: 'DialogOverviewExample, DialogOverviewExampleDialog'\n    },\n    'elevation-overview': {\n        title: 'Elevation CSS classes',\n        component: ElevationOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'expansion-overview': {\n        title: 'Basic expansion panel',\n        component: ExpansionOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'expansion-steps': {\n        title: 'Expansion panel as accordion',\n        component: ExpansionStepsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'form-field-custom-control': {\n        title: 'Form field with custom telephone number input control. ',\n        component: FormFieldCustomControlExample,\n        additionalFiles: [\"form-field-custom-control-example.html\"],\n        selectorName: 'FormFieldCustomControlExample, MyTelInput'\n    },\n    'form-field-error': {\n        title: 'Form field with error messages ',\n        component: FormFieldErrorExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'form-field-hint': {\n        title: 'Form field with hints ',\n        component: FormFieldHintExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'form-field-label': {\n        title: 'Form field with label ',\n        component: FormFieldLabelExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'form-field-overview': {\n        title: 'Simple form field ',\n        component: FormFieldOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'form-field-prefix-suffix': {\n        title: 'Form field with prefix & suffix ',\n        component: FormFieldPrefixSuffixExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'form-field-theming': {\n        title: 'Form field theming ',\n        component: FormFieldThemingExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'grid-list-dynamic': {\n        title: 'Dynamic grid-list',\n        component: GridListDynamicExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'grid-list-overview': {\n        title: 'Basic grid-list',\n        component: GridListOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'icon-overview': {\n        title: 'Basic icons',\n        component: IconOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'icon-svg': {\n        title: 'SVG icons',\n        component: IconSvgExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-autosize-textarea': {\n        title: 'Auto-resizing textarea ',\n        component: InputAutosizeTextareaExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-clearable': {\n        title: 'Input with a clear button',\n        component: InputClearableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-error-state-matcher': {\n        title: 'Input with a custom ErrorStateMatcher ',\n        component: InputErrorStateMatcherExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-errors': {\n        title: 'Input with error messages',\n        component: InputErrorsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-form': {\n        title: 'Inputs in a form',\n        component: InputFormExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-hint': {\n        title: 'Input with hints',\n        component: InputHintExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-overview': {\n        title: 'Basic Inputs',\n        component: InputOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-prefix-suffix': {\n        title: 'Inputs with prefixes and suffixes',\n        component: InputPrefixSuffixExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'list-overview': {\n        title: 'Basic list',\n        component: ListOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'list-sections': {\n        title: 'List with sections',\n        component: ListSectionsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'list-selection': {\n        title: 'List with selection',\n        component: ListSelectionExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'menu-icons': {\n        title: 'Menu with icons',\n        component: MenuIconsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'menu-overview': {\n        title: 'Basic menu',\n        component: MenuOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'nested-menu': {\n        title: 'Nested menu',\n        component: NestedMenuExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'paginator-configurable': {\n        title: 'Configurable paginator',\n        component: PaginatorConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'paginator-overview': {\n        title: 'Paginator',\n        component: PaginatorOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-buffer': {\n        title: 'Buffer progress-bar',\n        component: ProgressBarBufferExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-configurable': {\n        title: 'Configurable progress-bar',\n        component: ProgressBarConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-determinate': {\n        title: 'Determinate progress-bar',\n        component: ProgressBarDeterminateExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-indeterminate': {\n        title: 'Indeterminate progress-bar',\n        component: ProgressBarIndeterminateExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-query': {\n        title: 'Query progress-bar',\n        component: ProgressBarQueryExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-spinner-configurable': {\n        title: 'Configurable progress spinner',\n        component: ProgressSpinnerConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-spinner-overview': {\n        title: 'Basic progress-spinner',\n        component: ProgressSpinnerOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'radio-ng-model': {\n        title: 'Radios with ngModel',\n        component: RadioNgModelExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'radio-overview': {\n        title: 'Basic radios',\n        component: RadioOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-custom-trigger': {\n        title: 'Select with custom trigger text ',\n        component: SelectCustomTriggerExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-disabled': {\n        title: 'Disabled select ',\n        component: SelectDisabledExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-error-state-matcher': {\n        title: 'Select with a custom ErrorStateMatcher ',\n        component: SelectErrorStateMatcherExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-form': {\n        title: 'Select in a form',\n        component: SelectFormExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-hint-error': {\n        title: 'Select with form field features ',\n        component: SelectHintErrorExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-multiple': {\n        title: 'Select with multiple selection ',\n        component: SelectMultipleExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-no-ripple': {\n        title: 'Select with no option ripple ',\n        component: SelectNoRippleExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-optgroup': {\n        title: 'Select with option groups ',\n        component: SelectOptgroupExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-overview': {\n        title: 'Basic select',\n        component: SelectOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-panel-class': {\n        title: 'Select with custom panel styling',\n        component: SelectPanelClassExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-reset': {\n        title: 'Select with reset option ',\n        component: SelectResetExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-value-binding': {\n        title: 'Select with 2-way value binding ',\n        component: SelectValueBindingExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-autosize': {\n        title: 'Autosize sidenav',\n        component: SidenavAutosizeExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-disable-close': {\n        title: 'Sidenav with custom escape and backdrop click behavior ',\n        component: SidenavDisableCloseExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-drawer-overview': {\n        title: 'Basic drawer ',\n        component: SidenavDrawerOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-fixed': {\n        title: 'Fixed sidenav ',\n        component: SidenavFixedExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-mode': {\n        title: 'Sidenav with configurable mode ',\n        component: SidenavModeExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-open-close': {\n        title: 'Sidenav open & close behavior ',\n        component: SidenavOpenCloseExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-overview': {\n        title: 'Basic sidenav ',\n        component: SidenavOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-position': {\n        title: 'Implicit main content with two sidenavs ',\n        component: SidenavPositionExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-responsive': {\n        title: 'Responsive sidenav ',\n        component: SidenavResponsiveExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slide-toggle-configurable': {\n        title: 'Configurable slide-toggle',\n        component: SlideToggleConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slide-toggle-forms': {\n        title: 'Slide-toggle with forms',\n        component: SlideToggleFormsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slide-toggle-overview': {\n        title: 'Basic slide-toggles',\n        component: SlideToggleOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slider-configurable': {\n        title: 'Configurable slider',\n        component: SliderConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slider-overview': {\n        title: 'Basic slider',\n        component: SliderOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'snack-bar-component': {\n        title: 'Snack-bar with a custom component',\n        component: SnackBarComponentExample,\n        additionalFiles: [\"snack-bar-component-example-snack.html\"],\n        selectorName: 'SnackBarComponentExample, PizzaPartyComponent'\n    },\n    'snack-bar-overview': {\n        title: 'Basic snack-bar',\n        component: SnackBarOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sort-overview': {\n        title: 'Sorting overview',\n        component: SortOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'stepper-overview': {\n        title: 'Stepper overview',\n        component: StepperOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-basic': {\n        title: 'Basic table',\n        component: TableBasicExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-filtering': {\n        title: 'Table with filtering',\n        component: TableFilteringExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-http': {\n        title: 'Table retrieving data through HTTP',\n        component: TableHttpExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-overview': {\n        title: 'Data table with sorting, pagination, and filtering.',\n        component: TableOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-pagination': {\n        title: 'Table with pagination',\n        component: TablePaginationExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-selection': {\n        title: 'Table with selection',\n        component: TableSelectionExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-sorting': {\n        title: 'Table with sorting',\n        component: TableSortingExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tabs-overview': {\n        title: 'Basic tabs',\n        component: TabsOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tabs-template-label': {\n        title: 'Complex Example',\n        component: TabsTemplateLabelExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'toolbar-multirow': {\n        title: 'Multi-row toolbar',\n        component: ToolbarMultirowExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'toolbar-overview': {\n        title: 'Basic toolbar',\n        component: ToolbarOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tooltip-overview': {\n        title: 'Basic tooltip',\n        component: TooltipOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tooltip-position': {\n        title: 'Tooltip with custom position',\n        component: TooltipPositionExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n};\nexport const /** @type {?} */ EXAMPLE_LIST = [\n    AutocompleteDisplayExample,\n    AutocompleteFilterExample,\n    AutocompleteOverviewExample,\n    AutocompleteSimpleExample,\n    ButtonOverviewExample,\n    ButtonToggleExclusiveExample,\n    ButtonToggleOverviewExample,\n    ButtonTypesExample,\n    CardFancyExample,\n    CardOverviewExample,\n    CdkTableBasicExample,\n    CheckboxConfigurableExample,\n    CheckboxOverviewExample,\n    ChipsInputExample,\n    ChipsOverviewExample,\n    ChipsStackedExample,\n    DatepickerApiExample,\n    DatepickerDisabledExample,\n    DatepickerEventsExample,\n    DatepickerFilterExample,\n    DatepickerFormatsExample,\n    DatepickerLocaleExample,\n    DatepickerMinMaxExample,\n    DatepickerMomentExample,\n    DatepickerOverviewExample,\n    DatepickerStartViewExample,\n    DatepickerTouchExample,\n    DatepickerValueExample,\n    DialogContentExampleDialog, DialogContentExample,\n    DialogDataExampleDialog, DialogDataExample,\n    DialogElementsExampleDialog, DialogElementsExample,\n    DialogOverviewExampleDialog, DialogOverviewExample,\n    ElevationOverviewExample,\n    ExpansionOverviewExample,\n    ExpansionStepsExample,\n    MyTelInput, FormFieldCustomControlExample,\n    FormFieldErrorExample,\n    FormFieldHintExample,\n    FormFieldLabelExample,\n    FormFieldOverviewExample,\n    FormFieldPrefixSuffixExample,\n    FormFieldThemingExample,\n    GridListDynamicExample,\n    GridListOverviewExample,\n    IconOverviewExample,\n    IconSvgExample,\n    InputAutosizeTextareaExample,\n    InputClearableExample,\n    InputErrorStateMatcherExample,\n    InputErrorsExample,\n    InputFormExample,\n    InputHintExample,\n    InputOverviewExample,\n    InputPrefixSuffixExample,\n    ListOverviewExample,\n    ListSectionsExample,\n    ListSelectionExample,\n    MenuIconsExample,\n    MenuOverviewExample,\n    NestedMenuExample,\n    PaginatorConfigurableExample,\n    PaginatorOverviewExample,\n    ProgressBarBufferExample,\n    ProgressBarConfigurableExample,\n    ProgressBarDeterminateExample,\n    ProgressBarIndeterminateExample,\n    ProgressBarQueryExample,\n    ProgressSpinnerConfigurableExample,\n    ProgressSpinnerOverviewExample,\n    RadioNgModelExample,\n    RadioOverviewExample,\n    SelectCustomTriggerExample,\n    SelectDisabledExample,\n    SelectErrorStateMatcherExample,\n    SelectFormExample,\n    SelectHintErrorExample,\n    SelectMultipleExample,\n    SelectNoRippleExample,\n    SelectOptgroupExample,\n    SelectOverviewExample,\n    SelectPanelClassExample,\n    SelectResetExample,\n    SelectValueBindingExample,\n    SidenavAutosizeExample,\n    SidenavDisableCloseExample,\n    SidenavDrawerOverviewExample,\n    SidenavFixedExample,\n    SidenavModeExample,\n    SidenavOpenCloseExample,\n    SidenavOverviewExample,\n    SidenavPositionExample,\n    SidenavResponsiveExample,\n    SlideToggleConfigurableExample,\n    SlideToggleFormsExample,\n    SlideToggleOverviewExample,\n    SliderConfigurableExample,\n    SliderOverviewExample,\n    PizzaPartyComponent, SnackBarComponentExample,\n    SnackBarOverviewExample,\n    SortOverviewExample,\n    StepperOverviewExample,\n    TableBasicExample,\n    TableFilteringExample,\n    TableHttpExample,\n    TableOverviewExample,\n    TablePaginationExample,\n    TableSelectionExample,\n    TableSortingExample,\n    TabsOverviewExample,\n    TabsTemplateLabelExample,\n    ToolbarMultirowExample,\n    ToolbarOverviewExample,\n    TooltipOverviewExample,\n    TooltipPositionExample,\n];\nexport class ExampleModule {\n}\nExampleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: EXAMPLE_LIST,\n                entryComponents: EXAMPLE_LIST,\n                imports: [\n                    ExampleMaterialModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CommonModule\n                ]\n            },] },\n];\n/** @nocollapse */\nExampleModule.ctorParameters = () => [];\nfunction ExampleModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ExampleModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ExampleModule.ctorParameters;\n}\n//# sourceMappingURL=example-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { EXAMPLE_COMPONENTS } from \"./example-module\";\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n    /**\n     * @param {?} example\n     */\n    constructor(example) {\n        // TODO: figure out how do we get these variables.\n        this.description = 'Some description for material';\n        // TODO: use real example and delete the example/ folder.\n        this.examplePath = '/assets/example/';\n        this.exampleFiles = ['button-demo.html', 'button-demo.scss', 'button-demo.ts'];\n        // TODO: extract these variables from example code.\n        this.selectorName = 'button-demo';\n        this.indexFilename = 'button-demo';\n        this.componentName = 'ButtonDemo';\n        if (example && EXAMPLE_COMPONENTS[example]) {\n            this.examplePath = `/assets/stackblitz/examples/${example}/`;\n            // TODO(tinayuangao): Do not hard-code extensions\n            this.exampleFiles = ['html', 'ts', 'css']\n                .map((extension) => `${example}-example.${extension}`);\n            let /** @type {?} */ exampleFilesSet = new Set(['html', 'ts', 'css'].map((extension) => `${example}-example.${extension}`));\n            if (EXAMPLE_COMPONENTS[example].additionalFiles) {\n                for (let /** @type {?} */ file of EXAMPLE_COMPONENTS[example].additionalFiles) {\n                    exampleFilesSet.add(file);\n                }\n            }\n            this.exampleFiles = Array.from(exampleFilesSet.values());\n            this.selectorName = this.indexFilename = `${example}-example`;\n            let /** @type {?} */ exampleName = example.replace(/(?:^\\w|\\b\\w)/g, letter => letter.toUpperCase());\n            if (EXAMPLE_COMPONENTS[example].title) {\n                this.description = EXAMPLE_COMPONENTS[example].title;\n            }\n            else {\n                this.description = exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n            }\n            if (EXAMPLE_COMPONENTS[example].selectorName) {\n                this.componentName = EXAMPLE_COMPONENTS[example].selectorName;\n            }\n            else {\n                this.componentName = exampleName.replace(/[\\-]+/g, '') + 'Example';\n            }\n        }\n    }\n}\nfunction ExampleData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleData.prototype.description;\n    /** @type {?} */\n    ExampleData.prototype.examplePath;\n    /** @type {?} */\n    ExampleData.prototype.exampleFiles;\n    /** @type {?} */\n    ExampleData.prototype.selectorName;\n    /** @type {?} */\n    ExampleData.prototype.indexFilename;\n    /** @type {?} */\n    ExampleData.prototype.componentName;\n}\n//# sourceMappingURL=example-data.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { ExampleData } from \"./example-data\";\nexport { EXAMPLE_COMPONENTS, EXAMPLE_LIST, ExampleModule } from \"./example-module\";\nexport { ListOverviewExample } from \"./list-overview/list-overview-example\";\nexport { DatepickerOverviewExample } from \"./datepicker-overview/datepicker-overview-example\";\nexport { CardFancyExample } from \"./card-fancy/card-fancy-example\";\nexport { ToolbarMultirowExample } from \"./toolbar-multirow/toolbar-multirow-example\";\nexport { ButtonToggleOverviewExample } from \"./button-toggle-overview/button-toggle-overview-example\";\nexport { ExpansionOverviewExample } from \"./expansion-overview/expansion-overview-example\";\nexport { StepperOverviewExample } from \"./stepper-overview/stepper-overview-example\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { ExampleData, EXAMPLE_COMPONENTS, EXAMPLE_LIST, ExampleModule, ListOverviewExample, DatepickerOverviewExample, CardFancyExample, ToolbarMultirowExample, ButtonToggleOverviewExample, ExpansionOverviewExample, StepperOverviewExample } from \"./public-api\";\nexport { AutocompleteDisplayExample as ɵa } from \"./autocomplete-display/autocomplete-display-example\";\nexport { AutocompleteFilterExample as ɵb } from \"./autocomplete-filter/autocomplete-filter-example\";\nexport { AutocompleteOverviewExample as ɵc } from \"./autocomplete-overview/autocomplete-overview-example\";\nexport { AutocompleteSimpleExample as ɵd } from \"./autocomplete-simple/autocomplete-simple-example\";\nexport { ButtonOverviewExample as ɵe } from \"./button-overview/button-overview-example\";\nexport { ButtonToggleExclusiveExample as ɵf } from \"./button-toggle-exclusive/button-toggle-exclusive-example\";\nexport { ButtonTypesExample as ɵg } from \"./button-types/button-types-example\";\nexport { CardOverviewExample as ɵh } from \"./card-overview/card-overview-example\";\nexport { CdkTableBasicExample as ɵi } from \"./cdk-table-basic/cdk-table-basic-example\";\nexport { CheckboxConfigurableExample as ɵj } from \"./checkbox-configurable/checkbox-configurable-example\";\nexport { CheckboxOverviewExample as ɵk } from \"./checkbox-overview/checkbox-overview-example\";\nexport { ChipsInputExample as ɵl } from \"./chips-input/chips-input-example\";\nexport { ChipsOverviewExample as ɵm } from \"./chips-overview/chips-overview-example\";\nexport { ChipsStackedExample as ɵn } from \"./chips-stacked/chips-stacked-example\";\nexport { DatepickerApiExample as ɵo } from \"./datepicker-api/datepicker-api-example\";\nexport { DatepickerDisabledExample as ɵp } from \"./datepicker-disabled/datepicker-disabled-example\";\nexport { DatepickerEventsExample as ɵq } from \"./datepicker-events/datepicker-events-example\";\nexport { DatepickerFilterExample as ɵr } from \"./datepicker-filter/datepicker-filter-example\";\nexport { DatepickerFormatsExample as ɵt, MY_FORMATS as ɵs } from \"./datepicker-formats/datepicker-formats-example\";\nexport { DatepickerLocaleExample as ɵu } from \"./datepicker-locale/datepicker-locale-example\";\nexport { DatepickerMinMaxExample as ɵv } from \"./datepicker-min-max/datepicker-min-max-example\";\nexport { DatepickerMomentExample as ɵw } from \"./datepicker-moment/datepicker-moment-example\";\nexport { DatepickerStartViewExample as ɵx } from \"./datepicker-start-view/datepicker-start-view-example\";\nexport { DatepickerTouchExample as ɵy } from \"./datepicker-touch/datepicker-touch-example\";\nexport { DatepickerValueExample as ɵz } from \"./datepicker-value/datepicker-value-example\";\nexport { DialogContentExample as ɵba, DialogContentExampleDialog as ɵbb } from \"./dialog-content/dialog-content-example\";\nexport { DialogDataExample as ɵbc, DialogDataExampleDialog as ɵbd } from \"./dialog-data/dialog-data-example\";\nexport { DialogElementsExample as ɵbe, DialogElementsExampleDialog as ɵbf } from \"./dialog-elements/dialog-elements-example\";\nexport { DialogOverviewExample as ɵbg, DialogOverviewExampleDialog as ɵbh } from \"./dialog-overview/dialog-overview-example\";\nexport { ElevationOverviewExample as ɵbi } from \"./elevation-overview/elevation-overview-example\";\nexport { ExpansionStepsExample as ɵbj } from \"./expansion-steps/expansion-steps-example\";\nexport { FormFieldCustomControlExample as ɵbl, MyTelInput as ɵbk } from \"./form-field-custom-control/form-field-custom-control-example\";\nexport { FormFieldErrorExample as ɵbm } from \"./form-field-error/form-field-error-example\";\nexport { FormFieldHintExample as ɵbn } from \"./form-field-hint/form-field-hint-example\";\nexport { FormFieldLabelExample as ɵbo } from \"./form-field-label/form-field-label-example\";\nexport { FormFieldOverviewExample as ɵbp } from \"./form-field-overview/form-field-overview-example\";\nexport { FormFieldPrefixSuffixExample as ɵbq } from \"./form-field-prefix-suffix/form-field-prefix-suffix-example\";\nexport { FormFieldThemingExample as ɵbr } from \"./form-field-theming/form-field-theming-example\";\nexport { GridListDynamicExample as ɵbs } from \"./grid-list-dynamic/grid-list-dynamic-example\";\nexport { GridListOverviewExample as ɵbt } from \"./grid-list-overview/grid-list-overview-example\";\nexport { IconOverviewExample as ɵbu } from \"./icon-overview/icon-overview-example\";\nexport { IconSvgExample as ɵbv } from \"./icon-svg-example/icon-svg-example\";\nexport { InputAutosizeTextareaExample as ɵbw } from \"./input-autosize-textarea/input-autosize-textarea-example\";\nexport { InputClearableExample as ɵbx } from \"./input-clearable/input-clearable-example\";\nexport { InputErrorStateMatcherExample as ɵby } from \"./input-error-state-matcher/input-error-state-matcher-example\";\nexport { InputErrorsExample as ɵbz } from \"./input-errors/input-errors-example\";\nexport { InputFormExample as ɵca } from \"./input-form/input-form-example\";\nexport { InputHintExample as ɵcb } from \"./input-hint/input-hint-example\";\nexport { InputOverviewExample as ɵcc } from \"./input-overview/input-overview-example\";\nexport { InputPrefixSuffixExample as ɵcd } from \"./input-prefix-suffix/input-prefix-suffix-example\";\nexport { ListSectionsExample as ɵce } from \"./list-sections/list-sections-example\";\nexport { ListSelectionExample as ɵcf } from \"./list-selection/list-selection-example\";\nexport { ExampleMaterialModule as ɵek } from \"./material-module\";\nexport { MenuIconsExample as ɵcg } from \"./menu-icons/menu-icons-example\";\nexport { MenuOverviewExample as ɵch } from \"./menu-overview/menu-overview-example\";\nexport { NestedMenuExample as ɵci } from \"./nested-menu/nested-menu-example\";\nexport { PaginatorConfigurableExample as ɵcj } from \"./paginator-configurable/paginator-configurable-example\";\nexport { PaginatorOverviewExample as ɵck } from \"./paginator-overview/paginator-overview-example\";\nexport { ProgressBarBufferExample as ɵcl } from \"./progress-bar-buffer/progress-bar-buffer-example\";\nexport { ProgressBarConfigurableExample as ɵcm } from \"./progress-bar-configurable/progress-bar-configurable-example\";\nexport { ProgressBarDeterminateExample as ɵcn } from \"./progress-bar-determinate/progress-bar-determinate-example\";\nexport { ProgressBarIndeterminateExample as ɵco } from \"./progress-bar-indeterminate/progress-bar-indeterminate-example\";\nexport { ProgressBarQueryExample as ɵcp } from \"./progress-bar-query/progress-bar-query-example\";\nexport { ProgressSpinnerConfigurableExample as ɵcq } from \"./progress-spinner-configurable/progress-spinner-configurable-example\";\nexport { ProgressSpinnerOverviewExample as ɵcr } from \"./progress-spinner-overview/progress-spinner-overview-example\";\nexport { RadioNgModelExample as ɵcs } from \"./radio-ng-model/radio-ng-model-example\";\nexport { RadioOverviewExample as ɵct } from \"./radio-overview/radio-overview-example\";\nexport { SelectCustomTriggerExample as ɵcu } from \"./select-custom-trigger/select-custom-trigger-example\";\nexport { SelectDisabledExample as ɵcv } from \"./select-disabled/select-disabled-example\";\nexport { SelectErrorStateMatcherExample as ɵcw } from \"./select-error-state-matcher/select-error-state-matcher-example\";\nexport { SelectFormExample as ɵcx } from \"./select-form/select-form-example\";\nexport { SelectHintErrorExample as ɵcy } from \"./select-hint-error/select-hint-error-example\";\nexport { SelectMultipleExample as ɵcz } from \"./select-multiple/select-multiple-example\";\nexport { SelectNoRippleExample as ɵda } from \"./select-no-ripple/select-no-ripple-example\";\nexport { SelectOptgroupExample as ɵdb } from \"./select-optgroup/select-optgroup-example\";\nexport { SelectOverviewExample as ɵdc } from \"./select-overview/select-overview-example\";\nexport { SelectPanelClassExample as ɵdd } from \"./select-panel-class/select-panel-class-example\";\nexport { SelectResetExample as ɵde } from \"./select-reset/select-reset-example\";\nexport { SelectValueBindingExample as ɵdf } from \"./select-value-binding/select-value-binding-example\";\nexport { SidenavAutosizeExample as ɵdg } from \"./sidenav-autosize/sidenav-autosize-example\";\nexport { SidenavDisableCloseExample as ɵdh } from \"./sidenav-disable-close/sidenav-disable-close-example\";\nexport { SidenavDrawerOverviewExample as ɵdi } from \"./sidenav-drawer-overview/sidenav-drawer-overview-example\";\nexport { SidenavFixedExample as ɵdj } from \"./sidenav-fixed/sidenav-fixed-example\";\nexport { SidenavModeExample as ɵdk } from \"./sidenav-mode/sidenav-mode-example\";\nexport { SidenavOpenCloseExample as ɵdl } from \"./sidenav-open-close/sidenav-open-close-example\";\nexport { SidenavOverviewExample as ɵdm } from \"./sidenav-overview/sidenav-overview-example\";\nexport { SidenavPositionExample as ɵdn } from \"./sidenav-position/sidenav-position-example\";\nexport { SidenavResponsiveExample as ɵdo } from \"./sidenav-responsive/sidenav-responsive-example\";\nexport { SlideToggleConfigurableExample as ɵdp } from \"./slide-toggle-configurable/slide-toggle-configurable-example\";\nexport { SlideToggleFormsExample as ɵdq } from \"./slide-toggle-forms/slide-toggle-forms-example\";\nexport { SlideToggleOverviewExample as ɵdr } from \"./slide-toggle-overview/slide-toggle-overview-example\";\nexport { SliderConfigurableExample as ɵds } from \"./slider-configurable/slider-configurable-example\";\nexport { SliderOverviewExample as ɵdt } from \"./slider-overview/slider-overview-example\";\nexport { PizzaPartyComponent as ɵdv, SnackBarComponentExample as ɵdu } from \"./snack-bar-component/snack-bar-component-example\";\nexport { SnackBarOverviewExample as ɵdw } from \"./snack-bar-overview/snack-bar-overview-example\";\nexport { SortOverviewExample as ɵdx } from \"./sort-overview/sort-overview-example\";\nexport { TableBasicExample as ɵdy } from \"./table-basic/table-basic-example\";\nexport { TableFilteringExample as ɵdz } from \"./table-filtering/table-filtering-example\";\nexport { TableHttpExample as ɵea } from \"./table-http/table-http-example\";\nexport { TableOverviewExample as ɵeb } from \"./table-overview/table-overview-example\";\nexport { TablePaginationExample as ɵec } from \"./table-pagination/table-pagination-example\";\nexport { TableSelectionExample as ɵed } from \"./table-selection/table-selection-example\";\nexport { TableSortingExample as ɵee } from \"./table-sorting/table-sorting-example\";\nexport { TabsOverviewExample as ɵef } from \"./tabs-overview/tabs-overview-example\";\nexport { TabsTemplateLabelExample as ɵeg } from \"./tabs-template-label/tabs-template-label-example\";\nexport { ToolbarOverviewExample as ɵeh } from \"./toolbar-overview/toolbar-overview-example\";\nexport { TooltipOverviewExample as ɵei } from \"./tooltip-overview/tooltip-overview-example\";\nexport { TooltipPositionExample as ɵej } from \"./tooltip-position/tooltip-position-example\";\n//# sourceMappingURL=index.js.map"],"names":["_rollupMoment","_moment","moment","ɵ0","MyErrorStateMatcher","ELEMENT_DATA","observableOf","NAMES","COLORS"],"mappings":"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}