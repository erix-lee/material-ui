{"version":3,"file":"form-field-custom-control-example.js","sourceRoot":"","sources":["../../../../src/material-examples/form-field-custom-control/form-field-custom-control-example.ts"],"names":[],"mappings":"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","sourcesContent":["import {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatFormFieldControl} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\n\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\n}\n\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'my-tel-input',\n  templateUrl: 'form-field-custom-control-example.html',\n  styleUrls: ['form-field-custom-control-example.css'],\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\n  host: {\n    '[class.floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy',\n  }\n})\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n\n  parts: FormGroup;\n\n  stateChanges = new Subject<void>();\n\n  focused = false;\n\n  ngControl = null;\n\n  errorState = false;\n\n  controlType = 'my-tel-input';\n\n  get empty() {\n    let n = this.parts.value;\n    return !n.area && !n.exchange && !n.subscriber;\n  }\n\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  id = `my-tel-input-${MyTelInput.nextId++}`;\n\n  describedBy = '';\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    let n = this.parts.value;\n    if (n.area.length == 3 && n.exchange.length == 3 && n.subscriber.length == 4) {\n      return new MyTel(n.area, n.exchange, n.subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    tel = tel || new MyTel('', '', '');\n    this.parts.setValue({area: tel.area, exchange: tel.exchange, subscriber: tel.subscriber});\n    this.stateChanges.next();\n  }\n\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef) {\n    this.parts =  fb.group({\n      'area': '',\n      'exchange': '',\n      'subscriber': '',\n    });\n\n    fm.monitor(elRef.nativeElement, true).subscribe((origin) => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n}\n\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  template: `\n    <mat-form-field>\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\n      <mat-icon matSuffix>phone</mat-icon>\n      <mat-hint>Include area code</mat-hint>\n    </mat-form-field>\n  `\n})\nexport class FormFieldCustomControlExample {}\n"]}