{"version":3,"file":"autocomplete-overview-example.js","sourceRoot":"","sources":["../../../../../src/material-examples/autocomplete-overview/autocomplete-overview-example.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAC,SAAS,EAAC,sBAAsB;AACxC,OAAO,EAAC,WAAW,EAAC,uBAAuB;AAG3C,OAAO,EAAC,SAAS,EAAC,iCAAiC;AACnD,OAAO,EAAC,GAAG,EAAC,2BAA2B;AAEvC,IAAA;IACE,eAAmB,IAAY,EAAS,UAAkB,EAAS,IAAY;QAA5D,SAAI,GAAJ,IAAI,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;KAAK;gBARtF;IASC,CAAA;AAFD,iBAEC;;;;;;;;;;;;;IAyCC;QAAA,iBAOC;sBAlCiB;YAChB;gBACE,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,QAAQ;;gBAEpB,IAAI,EAAE,0EAA0E;aACjF;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,UAAU,EAAE,QAAQ;;gBAEpB,IAAI,EAAE,4EAA4E;aACnF;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,QAAQ;;gBAEpB,IAAI,EAAE,yEAAyE;aAChF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE,QAAQ;;gBAEpB,IAAI,EAAE,uEAAuE;aAC9E;SACF;QAGC,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;aAC9C,IAAI,CACH,SAAS,CAAC,EAAE,CAAC,EACb,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAtD,CAAsD,CAAC,CACrE,CAAC;KACL;;;;;IAED,kDAAY;;;;IAAZ,UAAa,IAAY;QACvB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,KAAK;YAC7B,OAAA,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC;QAA1D,CAA0D,CAAC,CAAC;KAC/D;;gBAhDF,SAAS,SAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,WAAW,EAAE,oCAAoC;oBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;iBACjD;;;;sCAlBD;;SAmBa,2BAA2B","sourcesContent":["import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {Observable} from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {map} from 'rxjs/operators/map';\n\nexport class State {\n  constructor(public name: string, public population: string, public flag: string) { }\n}\n\n/**\n * @title Autocomplete overview\n */\n@Component({\n  selector: 'autocomplete-overview-example',\n  templateUrl: 'autocomplete-overview-example.html',\n  styleUrls: ['autocomplete-overview-example.css']\n})\nexport class AutocompleteOverviewExample {\n  stateCtrl: FormControl;\n  filteredStates: Observable<any[]>;\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  constructor() {\n    this.stateCtrl = new FormControl();\n    this.filteredStates = this.stateCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this.filterStates(state) : this.states.slice())\n      );\n  }\n\n  filterStates(name: string) {\n    return this.states.filter(state =>\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n\n}\n"]}